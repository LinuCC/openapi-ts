openapi: 3.0.4
info:
  title: TestProject
  version: '1.0'
paths:
  /api/BackupAndRestore/BackupDatabase:
    get:
      tags:
        - BackupAndRestore
      operationId: BackupAndRestore_BackupDatabase
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/BackupAndRestore/RestoreDatabase:
    get:
      tags:
        - BackupAndRestore
      operationId: BackupAndRestore_RestoreDatabase
      parameters:
        - name: path
          in: query
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/Book/list:
    get:
      tags:
        - Book
      operationId: Book_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /api/Book/fetch/{id}:
    get:
      tags:
        - Book
      operationId: Book_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
            text/plain:
              schema:
                $ref: '#/components/schemas/Book'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Book'
            text/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/Book/count:
    get:
      tags:
        - Book
      operationId: Book_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Book/paged:
    get:
      tags:
        - Book
      operationId: Book_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
  /api/Book/pagedneedle:
    get:
      tags:
        - Book
      operationId: Book_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/BookPageWithTotalCountDTO'
  /api/Book/addupdate:
    post:
      tags:
        - Book
      operationId: Book_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
            text/plain:
              schema:
                $ref: '#/components/schemas/Book'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Book'
            text/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/Book/addupdatereturnonlyid:
    post:
      tags:
        - Book
      operationId: Book_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Book/addupdatelist:
    post:
      tags:
        - Book
      operationId: Book_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /api/Book/addupdatelistreturnonlyid:
    post:
      tags:
        - Book
      operationId: Book_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Book/remove/{id}:
    delete:
      tags:
        - Book
      operationId: Book_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Book/markasdeleted/{id}:
    delete:
      tags:
        - Book
      operationId: Book_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/BookOData:
    get:
      tags:
        - BookCrud
      operationId: BookOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                additionalProperties: false
  /api/crud/book/post:
    post:
      tags:
        - BookCrud
      operationId: BookCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/BookInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/BookInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/BookInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/BookInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/BookInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BookInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
            text/plain:
              schema:
                $ref: '#/components/schemas/Book'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Book'
            text/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/crud/book/patch:
    patch:
      tags:
        - BookCrud
      operationId: BookCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/BookUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/BookUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/BookUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/BookUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/BookUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BookUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Book'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
            text/plain:
              schema:
                $ref: '#/components/schemas/Book'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Book'
            text/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/crud/book/delete:
    delete:
      tags:
        - BookCrud
      operationId: BookCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/book/softdelete:
    patch:
      tags:
        - BookCrud
      operationId: BookCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/BookLibraryJT/list:
    get:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
  /api/BookLibraryJT/fetch/{id}:
    get:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
  /api/BookLibraryJT/count:
    get:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/BookLibraryJT/paged:
    get:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
  /api/BookLibraryJT/pagedneedle:
    get:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJTPageWithTotalCountDTO'
  /api/BookLibraryJT/addupdate:
    post:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BookLibraryJT'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
  /api/BookLibraryJT/addupdatelist:
    post:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BookLibraryJT'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookLibraryJT'
  /api/BookLibraryJT/remove/{id}:
    delete:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/BookLibraryJT/markasdeleted/{id}:
    delete:
      tags:
        - BookLibraryJT
      operationId: BookLibraryJT_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/BookLibraryJTOData:
    get:
      tags:
        - BookLibraryJTCrud
      operationId: BookLibraryJTOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookLibraryJT'
                additionalProperties: false
  /api/crud/booklibraryjt/post:
    post:
      tags:
        - BookLibraryJTCrud
      operationId: BookLibraryJTCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BookLibraryJTInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
  /api/crud/booklibraryjt/patch:
    patch:
      tags:
        - BookLibraryJTCrud
      operationId: BookLibraryJTCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BookLibraryJTUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/xml:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/plain:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
            text/json:
              schema:
                $ref: '#/components/schemas/BookLibraryJT'
  /api/crud/booklibraryjt/delete:
    delete:
      tags:
        - BookLibraryJTCrud
      operationId: BookLibraryJTCrud_Delete
      parameters:
        - name: BookId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: LibraryId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/booklibraryjt/softdelete:
    patch:
      tags:
        - BookLibraryJTCrud
      operationId: BookLibraryJTCrud_SoftDelete
      parameters:
        - name: BookId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: LibraryId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Canvas/list:
    get:
      tags:
        - Canvas
      operationId: Canvas_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
  /api/Canvas/fetch/{id}:
    get:
      tags:
        - Canvas
      operationId: Canvas_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/xml:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/plain:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/json:
              schema:
                $ref: '#/components/schemas/Canvas'
  /api/Canvas/count:
    get:
      tags:
        - Canvas
      operationId: Canvas_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Canvas/paged:
    get:
      tags:
        - Canvas
      operationId: Canvas_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
  /api/Canvas/pagedneedle:
    get:
      tags:
        - Canvas
      operationId: Canvas_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CanvasPageWithTotalCountDTO'
  /api/Canvas/addupdate:
    post:
      tags:
        - Canvas
      operationId: Canvas_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/xml:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/plain:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/json:
              schema:
                $ref: '#/components/schemas/Canvas'
  /api/Canvas/addupdatereturnonlyid:
    post:
      tags:
        - Canvas
      operationId: Canvas_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Canvas'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Canvas/addupdatelist:
    post:
      tags:
        - Canvas
      operationId: Canvas_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Canvas'
  /api/Canvas/addupdatelistreturnonlyid:
    post:
      tags:
        - Canvas
      operationId: Canvas_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Canvas'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Canvas/remove/{id}:
    delete:
      tags:
        - Canvas
      operationId: Canvas_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Canvas/markasdeleted/{id}:
    delete:
      tags:
        - Canvas
      operationId: Canvas_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/CanvasOData:
    get:
      tags:
        - CanvasCrud
      operationId: CanvasOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Canvas'
                additionalProperties: false
  /api/crud/canvas/post:
    post:
      tags:
        - CanvasCrud
      operationId: CanvasCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CanvasInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/xml:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/plain:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/json:
              schema:
                $ref: '#/components/schemas/Canvas'
  /api/crud/canvas/patch:
    patch:
      tags:
        - CanvasCrud
      operationId: CanvasCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CanvasUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/xml:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/plain:
              schema:
                $ref: '#/components/schemas/Canvas'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Canvas'
            text/json:
              schema:
                $ref: '#/components/schemas/Canvas'
  /api/crud/canvas/delete:
    delete:
      tags:
        - CanvasCrud
      operationId: CanvasCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/canvas/softdelete:
    patch:
      tags:
        - CanvasCrud
      operationId: CanvasCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/CCQDeveloperTools/CreateNewUserWithPermissions:
    post:
      tags:
        - CCQDeveloperTools
      operationId: CCQDeveloperTools_CreateNewUserWithPermissions
      parameters:
        - name: userName
          in: query
          required: true
          schema:
            type: string
        - name: claims
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AppClaimsEnum'
            nullable: true
        - name: claimGroupNames
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
            nullable: true
      responses:
        '200':
          description: OK
  /api/Circle/list:
    get:
      tags:
        - Circle
      operationId: Circle_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
  /api/Circle/fetch/{id}:
    get:
      tags:
        - Circle
      operationId: Circle_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Circle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Circle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Circle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Circle'
            text/json:
              schema:
                $ref: '#/components/schemas/Circle'
  /api/Circle/count:
    get:
      tags:
        - Circle
      operationId: Circle_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Circle/paged:
    get:
      tags:
        - Circle
      operationId: Circle_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
  /api/Circle/pagedneedle:
    get:
      tags:
        - Circle
      operationId: Circle_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CirclePageWithTotalCountDTO'
  /api/Circle/addupdate:
    post:
      tags:
        - Circle
      operationId: Circle_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Circle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Circle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Circle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Circle'
            text/json:
              schema:
                $ref: '#/components/schemas/Circle'
  /api/Circle/addupdatereturnonlyid:
    post:
      tags:
        - Circle
      operationId: Circle_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Circle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Circle/addupdatelist:
    post:
      tags:
        - Circle
      operationId: Circle_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Circle'
  /api/Circle/addupdatelistreturnonlyid:
    post:
      tags:
        - Circle
      operationId: Circle_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Circle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Circle/remove/{id}:
    delete:
      tags:
        - Circle
      operationId: Circle_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Circle/markasdeleted/{id}:
    delete:
      tags:
        - Circle
      operationId: Circle_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/CircleOData:
    get:
      tags:
        - CircleCrud
      operationId: CircleOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Circle'
                additionalProperties: false
  /api/crud/circle/post:
    post:
      tags:
        - CircleCrud
      operationId: CircleCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CircleInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/CircleInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/CircleInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/CircleInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/CircleInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/CircleInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CircleInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Circle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Circle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Circle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Circle'
            text/json:
              schema:
                $ref: '#/components/schemas/Circle'
  /api/crud/circle/patch:
    patch:
      tags:
        - CircleCrud
      operationId: CircleCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CircleUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Circle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Circle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Circle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Circle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Circle'
            text/json:
              schema:
                $ref: '#/components/schemas/Circle'
  /api/crud/circle/delete:
    delete:
      tags:
        - CircleCrud
      operationId: CircleCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/circle/softdelete:
    patch:
      tags:
        - CircleCrud
      operationId: CircleCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Claim/ClearUserClaimsCache:
    post:
      tags:
        - Claim
      operationId: Claim_ClearUserClaimsCache
      responses:
        '200':
          description: OK
  /api/Claim/ResetDatabase:
    post:
      tags:
        - Claim
      operationId: Claim_ResetDatabase
      responses:
        '200':
          description: OK
  /api/Claim/GetMyClaims:
    get:
      tags:
        - Claim
      operationId: Claim_GetMyClaims
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppClaimsEnum'
  /api/Claim/GetMyUserSessionData:
    get:
      tags:
        - Claim
      operationId: Claim_GetMyUserSessionData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/UserSessionDataDTO'
  /api/Claim/ListAllClaims:
    get:
      tags:
        - Claim
      operationId: Claim_ListAllClaims
      parameters:
        - name: includeUXClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: includeServerClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: includeTableClaims
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringStringListTuple'
  /api/Claim/ListAllClaimsAsEnum:
    get:
      tags:
        - Claim
      operationId: Claim_ListAllClaimsAsEnum
      parameters:
        - name: includeUXClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: includeServerClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: includeTableClaims
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryListTuple'
  /api/Claim/ListAllClaimsAsEnumWithDescription:
    get:
      tags:
        - Claim
      operationId: Claim_ListAllClaimsAsEnumWithDescription
      parameters:
        - name: includeUXClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: includeServerClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: includeTableClaims
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
            application/xml:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
            text/plain:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
            text/json:
              schema:
                type: array
                items:
                  $ref:
                    "#/components/schemas/CustomClaimsTypesEnumStringInt32DictionaryStringTup\
                    leListTuple"
  /api/Claim/ListTablesWithRowLevelPermissions:
    get:
      tags:
        - Claim
      operationId: Claim_ListTablesWithRowLevelPermissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
            application/xml:
              schema:
                type: array
                items:
                  type: string
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /api/Claim/GetEntitiesWithPermissions:
    get:
      tags:
        - Claim
      operationId: Claim_GetEntitiesWithPermissions
      parameters:
        - name: tableName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityWithPermissionsDTO'
  /api/Claim/RenameAppUserGroup:
    get:
      tags:
        - Claim
      operationId: Claim_RenameAppUserGroup
      parameters:
        - name: newGroupName
          in: query
          required: true
          schema:
            type: string
        - name: currentGroupId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/Claim/CreateNewApplicationUserGroup:
    post:
      tags:
        - Claim
      operationId: Claim_CreateNewApplicationUserGroup
      parameters:
        - name: groupName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/Claim/RenameClaimGroup:
    get:
      tags:
        - Claim
      operationId: Claim_RenameClaimGroup
      parameters:
        - name: newGroupName
          in: query
          required: true
          schema:
            type: string
        - name: currentGroupName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/Claim/DeleteClaimGroupByName:
    get:
      tags:
        - Claim
      operationId: Claim_DeleteClaimGroupByName
      parameters:
        - name: groupName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/Claim/CreateNewClaimGroup:
    post:
      tags:
        - Claim
      operationId: Claim_CreateNewClaimGroup
      parameters:
        - name: groupName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/Claim/DeleteAppUserGroup:
    get:
      tags:
        - Claim
      operationId: Claim_DeleteAppUserGroup
      parameters:
        - name: groupToDeleteId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  /api/Claim/CheckForAdminRole:
    get:
      tags:
        - Claim
      operationId: Claim_CheckForAdminRole
      parameters:
        - name: userName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Claim/CheckForUsers:
    get:
      tags:
        - Claim
      operationId: Claim_CheckForUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Claim/AddRemoveUpdateClaimGroupsToAppUserOrUsers:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateClaimGroupsToAppUserOrUsers
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
  /api/Claim/AddRemoveUpdateClaimGroupsToClaimGroupOrClaimGroups:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateClaimGroupsToClaimGroupOrClaimGroups
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
  /api/Claim/AddRemoveUpdateClaimGroupsToAppUserGroupOrUserGroups:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateClaimGroupsToAppUserGroupOrUserGroups
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimGroupAddUpdateDeleteDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
  /api/Claim/AddRemoveUpdateClaimsToAppUserOrUsers:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateClaimsToAppUserOrUsers
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
  /api/Claim/AddRemoveUpdateClaimsToClaimGroupOrClaimGroups:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateClaimsToClaimGroupOrClaimGroups
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
  /api/Claim/AddRemoveUpdateClaimsToAppUserGroupOrUserGroups:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateClaimsToAppUserGroupOrUserGroups
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ClaimEnumsToAddUpdateDeleteDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
  /api/Claim/AddRemoveUpdateAppUsersInAppuserGroups:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdateAppUsersInAppuserGroups
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ApplicationUsersToApplicationUserGroupsDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
  /api/Claim/AddRemoveUpdatePermsOnEntityRowsForApplicationUsers:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdatePermsOnEntityRowsForApplicationUsers
      parameters:
        - name: RecordTablesWithIdsInSetToAddRemovePermissionsFromTo
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DataRecordAddUpdateDeletePermissionTableSubListDTO'
        - name: ClaimSets
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: PermTypes
          in: query
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
            x-enumNames:
              - None
              - Read
              - Update
              - Delete
              - All
        - name: RemoveExistingUnMentioned
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
  /api/Claim/AddRemoveUpdatePermsOnEntityRowsForApplicationUserGroups:
    post:
      tags:
        - Claim
      operationId: Claim_AddRemoveUpdatePermsOnEntityRowsForApplicationUserGroups
      parameters:
        - name: RecordTablesWithIdsInSetToAddRemovePermissionsFromTo
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DataRecordAddUpdateDeletePermissionTableSubListDTO'
        - name: ClaimSets
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: PermTypes
          in: query
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
            x-enumNames:
              - None
              - Read
              - Update
              - Delete
              - All
        - name: RemoveExistingUnMentioned
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBaseDataMultiOwnerListTuple'
  /api/Claim/ApplicationUsersPaged:
    get:
      tags:
        - Claim
      operationId: Claim_ApplicationUsersPaged
      parameters:
        - name: includeClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUserGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: includeClaimGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationUserPageWithTotalCountDTO'
  /api/Claim/ApplicationList:
    get:
      tags:
        - Claim
      operationId: Claim_ApplicationList
      parameters:
        - name: includeClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUserGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: includeClaimGroups
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUser'
  /api/Claim/ApplicationUserGroupsPaged:
    get:
      tags:
        - Claim
      operationId: Claim_ApplicationUserGroupsPaged
      parameters:
        - name: includeClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUserGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: includeClaimGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationUserGroupPageWithTotalCountDTO'
  /api/Claim/ApplicationUserGroupsList:
    get:
      tags:
        - Claim
      operationId: Claim_ApplicationUserGroupsList
      parameters:
        - name: includeClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUserGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: includeClaimGroups
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationUserGroup'
  /api/Claim/ClaimGroupsPaged:
    get:
      tags:
        - Claim
      operationId: Claim_ClaimGroupsPaged
      parameters:
        - name: includeClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUserGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUsers
          in: query
          required: true
          schema:
            type: boolean
        - name: includeClaimGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ClaimGroupPageWithTotalCountDTO'
  /api/Claim/ClaimGroupsList:
    get:
      tags:
        - Claim
      operationId: Claim_ClaimGroupsList
      parameters:
        - name: includeClaims
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUserGroups
          in: query
          required: true
          schema:
            type: boolean
        - name: IncludeApplicationUsers
          in: query
          required: true
          schema:
            type: boolean
        - name: includeClaimGroups
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimGroup'
  /api/Claim/AddListIfNotExists:
    get:
      tags:
        - Claim
      operationId: Claim_AddListIfNotExists
      parameters:
        - name: reset
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Cover/list:
    get:
      tags:
        - Cover
      operationId: Cover_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
  /api/Cover/fetch/{id}:
    get:
      tags:
        - Cover
      operationId: Cover_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Cover'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cover'
            text/plain:
              schema:
                $ref: '#/components/schemas/Cover'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Cover'
            text/json:
              schema:
                $ref: '#/components/schemas/Cover'
  /api/Cover/count:
    get:
      tags:
        - Cover
      operationId: Cover_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Cover/paged:
    get:
      tags:
        - Cover
      operationId: Cover_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
  /api/Cover/pagedneedle:
    get:
      tags:
        - Cover
      operationId: Cover_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/CoverPageWithTotalCountDTO'
  /api/Cover/addupdate:
    post:
      tags:
        - Cover
      operationId: Cover_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Cover'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cover'
            text/plain:
              schema:
                $ref: '#/components/schemas/Cover'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Cover'
            text/json:
              schema:
                $ref: '#/components/schemas/Cover'
  /api/Cover/addupdatereturnonlyid:
    post:
      tags:
        - Cover
      operationId: Cover_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Cover'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Cover/addupdatelist:
    post:
      tags:
        - Cover
      operationId: Cover_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cover'
  /api/Cover/addupdatelistreturnonlyid:
    post:
      tags:
        - Cover
      operationId: Cover_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Cover'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Cover/remove/{id}:
    delete:
      tags:
        - Cover
      operationId: Cover_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Cover/markasdeleted/{id}:
    delete:
      tags:
        - Cover
      operationId: Cover_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/CoverOData:
    get:
      tags:
        - CoverCrud
      operationId: CoverOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cover'
                additionalProperties: false
  /api/crud/cover/post:
    post:
      tags:
        - CoverCrud
      operationId: CoverCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/CoverInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/CoverInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/CoverInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/CoverInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/CoverInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CoverInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Cover'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cover'
            text/plain:
              schema:
                $ref: '#/components/schemas/Cover'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Cover'
            text/json:
              schema:
                $ref: '#/components/schemas/Cover'
  /api/crud/cover/patch:
    patch:
      tags:
        - CoverCrud
      operationId: CoverCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CoverUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Cover'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Cover'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cover'
            text/plain:
              schema:
                $ref: '#/components/schemas/Cover'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Cover'
            text/json:
              schema:
                $ref: '#/components/schemas/Cover'
  /api/crud/cover/delete:
    delete:
      tags:
        - CoverCrud
      operationId: CoverCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/cover/softdelete:
    patch:
      tags:
        - CoverCrud
      operationId: CoverCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Library/list:
    get:
      tags:
        - Library
      operationId: Library_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
  /api/Library/fetch/{id}:
    get:
      tags:
        - Library
      operationId: Library_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Library'
            application/xml:
              schema:
                $ref: '#/components/schemas/Library'
            text/plain:
              schema:
                $ref: '#/components/schemas/Library'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Library'
            text/json:
              schema:
                $ref: '#/components/schemas/Library'
  /api/Library/count:
    get:
      tags:
        - Library
      operationId: Library_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Library/paged:
    get:
      tags:
        - Library
      operationId: Library_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
  /api/Library/pagedneedle:
    get:
      tags:
        - Library
      operationId: Library_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/LibraryPageWithTotalCountDTO'
  /api/Library/addupdate:
    post:
      tags:
        - Library
      operationId: Library_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Library'
            application/xml:
              schema:
                $ref: '#/components/schemas/Library'
            text/plain:
              schema:
                $ref: '#/components/schemas/Library'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Library'
            text/json:
              schema:
                $ref: '#/components/schemas/Library'
  /api/Library/addupdatereturnonlyid:
    post:
      tags:
        - Library
      operationId: Library_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Library'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Library/addupdatelist:
    post:
      tags:
        - Library
      operationId: Library_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
  /api/Library/addupdatelistreturnonlyid:
    post:
      tags:
        - Library
      operationId: Library_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Library'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Library/remove/{id}:
    delete:
      tags:
        - Library
      operationId: Library_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Library/markasdeleted/{id}:
    delete:
      tags:
        - Library
      operationId: Library_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/LibraryOData:
    get:
      tags:
        - LibraryCrud
      operationId: LibraryOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Library'
                additionalProperties: false
  /api/crud/library/post:
    post:
      tags:
        - LibraryCrud
      operationId: LibraryCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LibraryInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Library'
            application/xml:
              schema:
                $ref: '#/components/schemas/Library'
            text/plain:
              schema:
                $ref: '#/components/schemas/Library'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Library'
            text/json:
              schema:
                $ref: '#/components/schemas/Library'
  /api/crud/library/patch:
    patch:
      tags:
        - LibraryCrud
      operationId: LibraryCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LibraryUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Library'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Library'
            application/xml:
              schema:
                $ref: '#/components/schemas/Library'
            text/plain:
              schema:
                $ref: '#/components/schemas/Library'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Library'
            text/json:
              schema:
                $ref: '#/components/schemas/Library'
  /api/crud/library/delete:
    delete:
      tags:
        - LibraryCrud
      operationId: LibraryCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/library/softdelete:
    patch:
      tags:
        - LibraryCrud
      operationId: LibraryCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/MagicLink/SendLoginEmail:
    get:
      tags:
        - MagicLink
      operationId: MagicLink_SendLoginEmail
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
  /odata:
    get:
      tags:
        - Metadata
      operationId: Metadata_GetServiceDocument
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/xml:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            text/plain:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/ODataServiceDocument'
  /api/Note/list:
    get:
      tags:
        - Note
      operationId: Note_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
  /api/Note/fetch/{id}:
    get:
      tags:
        - Note
      operationId: Note_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Note'
            application/xml:
              schema:
                $ref: '#/components/schemas/Note'
            text/plain:
              schema:
                $ref: '#/components/schemas/Note'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Note'
            text/json:
              schema:
                $ref: '#/components/schemas/Note'
  /api/Note/count:
    get:
      tags:
        - Note
      operationId: Note_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Note/paged:
    get:
      tags:
        - Note
      operationId: Note_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
  /api/Note/pagedneedle:
    get:
      tags:
        - Note
      operationId: Note_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/NotePageWithTotalCountDTO'
  /api/Note/addupdate:
    post:
      tags:
        - Note
      operationId: Note_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Note'
            application/xml:
              schema:
                $ref: '#/components/schemas/Note'
            text/plain:
              schema:
                $ref: '#/components/schemas/Note'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Note'
            text/json:
              schema:
                $ref: '#/components/schemas/Note'
  /api/Note/addupdatereturnonlyid:
    post:
      tags:
        - Note
      operationId: Note_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Note/addupdatelist:
    post:
      tags:
        - Note
      operationId: Note_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
  /api/Note/addupdatelistreturnonlyid:
    post:
      tags:
        - Note
      operationId: Note_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Note'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Note/remove/{id}:
    delete:
      tags:
        - Note
      operationId: Note_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Note/markasdeleted/{id}:
    delete:
      tags:
        - Note
      operationId: Note_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/NoteOData:
    get:
      tags:
        - NoteCrud
      operationId: NoteOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                additionalProperties: false
  /api/crud/note/post:
    post:
      tags:
        - NoteCrud
      operationId: NoteCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/NoteInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/NoteInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/NoteInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/NoteInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/NoteInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NoteInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Note'
            application/xml:
              schema:
                $ref: '#/components/schemas/Note'
            text/plain:
              schema:
                $ref: '#/components/schemas/Note'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Note'
            text/json:
              schema:
                $ref: '#/components/schemas/Note'
  /api/crud/note/patch:
    patch:
      tags:
        - NoteCrud
      operationId: NoteCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Note'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Note'
            application/xml:
              schema:
                $ref: '#/components/schemas/Note'
            text/plain:
              schema:
                $ref: '#/components/schemas/Note'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Note'
            text/json:
              schema:
                $ref: '#/components/schemas/Note'
  /api/crud/note/delete:
    delete:
      tags:
        - NoteCrud
      operationId: NoteCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/note/softdelete:
    patch:
      tags:
        - NoteCrud
      operationId: NoteCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/OTP/GetQRCode:
    get:
      tags:
        - OTP
      operationId: OTP_GetQRCode
      parameters:
        - name: welcomeRequestId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
            application/json;IEEE754Compatible=false:
              schema:
                type: string
                format: binary
            application/json;IEEE754Compatible=true:
              schema:
                type: string
                format: binary
            application/xml:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
            text/json:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
  /api/OTP/SendSMSCode:
    get:
      tags:
        - OTP
      operationId: OTP_SendSMSCode
      parameters:
        - name: magic
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
  /api/OTP/GetTokenFromSMS:
    get:
      tags:
        - OTP
      operationId: OTP_GetTokenFromSMS
      parameters:
        - name: smsCode
          in: query
          required: true
          schema:
            type: string
        - name: magic
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
            application/json;IEEE754Compatible=false:
              schema:
                type: string
            application/json;IEEE754Compatible=true:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/OTP/GetTokenFromOTP:
    get:
      tags:
        - OTP
      operationId: OTP_GetTokenFromOTP
      parameters:
        - name: otp
          in: query
          required: true
          schema:
            type: string
        - name: magic
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AuthDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthErrorDetails'
  /api/OTP/GetQRCodeText:
    get:
      tags:
        - OTP
      operationId: OTP_GetQRCodeText
      parameters:
        - name: welcomeRequestId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            application/json;IEEE754Compatible=false:
              schema:
                type: string
            application/json;IEEE754Compatible=true:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /api/Rectangle/list:
    get:
      tags:
        - Rectangle
      operationId: Rectangle_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
  /api/Rectangle/fetch/{id}:
    get:
      tags:
        - Rectangle
      operationId: Rectangle_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
  /api/Rectangle/count:
    get:
      tags:
        - Rectangle
      operationId: Rectangle_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Rectangle/paged:
    get:
      tags:
        - Rectangle
      operationId: Rectangle_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
  /api/Rectangle/pagedneedle:
    get:
      tags:
        - Rectangle
      operationId: Rectangle_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/RectanglePageWithTotalCountDTO'
  /api/Rectangle/addupdate:
    post:
      tags:
        - Rectangle
      operationId: Rectangle_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
  /api/Rectangle/addupdatereturnonlyid:
    post:
      tags:
        - Rectangle
      operationId: Rectangle_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Rectangle/addupdatelist:
    post:
      tags:
        - Rectangle
      operationId: Rectangle_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rectangle'
  /api/Rectangle/addupdatelistreturnonlyid:
    post:
      tags:
        - Rectangle
      operationId: Rectangle_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Rectangle/remove/{id}:
    delete:
      tags:
        - Rectangle
      operationId: Rectangle_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Rectangle/markasdeleted/{id}:
    delete:
      tags:
        - Rectangle
      operationId: Rectangle_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/RectangleOData:
    get:
      tags:
        - RectangleCrud
      operationId: RectangleOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/Rectangle'
                additionalProperties: false
  /api/crud/rectangle/post:
    post:
      tags:
        - RectangleCrud
      operationId: RectangleCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RectangleInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
  /api/crud/rectangle/patch:
    patch:
      tags:
        - RectangleCrud
      operationId: RectangleCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RectangleUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                $ref: '#/components/schemas/Rectangle'
  /api/crud/rectangle/delete:
    delete:
      tags:
        - RectangleCrud
      operationId: RectangleCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/rectangle/softdelete:
    patch:
      tags:
        - RectangleCrud
      operationId: RectangleCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/SampleEntity1/list:
    get:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
  /api/SampleEntity1/fetch/{id}:
    get:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
  /api/SampleEntity1/count:
    get:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/SampleEntity1/paged:
    get:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
  /api/SampleEntity1/pagedneedle:
    get:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1PageWithTotalCountDTO'
  /api/SampleEntity1/addupdate:
    post:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
  /api/SampleEntity1/addupdatereturnonlyid:
    post:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity1'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/SampleEntity1/addupdatelist:
    post:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity1'
  /api/SampleEntity1/addupdatelistreturnonlyid:
    post:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity1'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/SampleEntity1/remove/{id}:
    delete:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/SampleEntity1/markasdeleted/{id}:
    delete:
      tags:
        - SampleEntity1
      operationId: SampleEntity1_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/SampleEntity1OData:
    get:
      tags:
        - SampleEntity1Crud
      operationId: SampleEntity1OData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/SampleEntity1'
                additionalProperties: false
  /api/crud/sampleentity1/post:
    post:
      tags:
        - SampleEntity1Crud
      operationId: SampleEntity1Crud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
          application/xml:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
          text/plain:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
          text/json:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SampleEntity1Insert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
  /api/crud/sampleentity1/patch:
    patch:
      tags:
        - SampleEntity1Crud
      operationId: SampleEntity1Crud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
          application/xml:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
          text/plain:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
          text/json:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SampleEntity1Update'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity1'
  /api/crud/sampleentity1/delete:
    delete:
      tags:
        - SampleEntity1Crud
      operationId: SampleEntity1Crud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/sampleentity1/softdelete:
    patch:
      tags:
        - SampleEntity1Crud
      operationId: SampleEntity1Crud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/SampleEntity2/list:
    get:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
  /api/SampleEntity2/fetch/{id}:
    get:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
  /api/SampleEntity2/count:
    get:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/SampleEntity2/paged:
    get:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
  /api/SampleEntity2/pagedneedle:
    get:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2PageWithTotalCountDTO'
  /api/SampleEntity2/addupdate:
    post:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
  /api/SampleEntity2/addupdatereturnonlyid:
    post:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=false:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=true:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/xml:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          text/plain:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          text/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
          application/*+json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SampleEntity2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/SampleEntity2/addupdatelist:
    post:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            application/octet-stream:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SampleEntity2'
  /api/SampleEntity2/addupdatelistreturnonlyid:
    post:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          text/plain:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SampleEntity2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/SampleEntity2/remove/{id}:
    delete:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/SampleEntity2/markasdeleted/{id}:
    delete:
      tags:
        - SampleEntity2
      operationId: SampleEntity2_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/SampleEntity2OData:
    get:
      tags:
        - SampleEntity2Crud
      operationId: SampleEntity2OData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      $ref: '#/components/schemas/SampleEntity2'
                additionalProperties: false
  /api/crud/sampleentity2/post:
    post:
      tags:
        - SampleEntity2Crud
      operationId: SampleEntity2Crud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
          application/xml:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
          text/plain:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
          text/json:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SampleEntity2Insert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
  /api/crud/sampleentity2/patch:
    patch:
      tags:
        - SampleEntity2Crud
      operationId: SampleEntity2Crud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
          application/xml:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
          text/plain:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
          text/json:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SampleEntity2Update'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/xml:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/plain:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
            text/json:
              schema:
                $ref: '#/components/schemas/SampleEntity2'
  /api/crud/sampleentity2/delete:
    delete:
      tags:
        - SampleEntity2Crud
      operationId: SampleEntity2Crud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/sampleentity2/softdelete:
    patch:
      tags:
        - SampleEntity2Crud
      operationId: SampleEntity2Crud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Shape/list:
    get:
      tags:
        - Shape
      operationId: Shape_List
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
  /api/Shape/fetch/{id}:
    get:
      tags:
        - Shape
      operationId: Shape_Fetch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
  /api/Shape/count:
    get:
      tags:
        - Shape
      operationId: Shape_Count
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Shape/paged:
    get:
      tags:
        - Shape
      operationId: Shape_ListPaged
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
  /api/Shape/pagedneedle:
    get:
      tags:
        - Shape
      operationId: Shape_PagedNeedle
      parameters:
        - name: needle
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
        - name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/json;IEEE754Compatible=false:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/json;IEEE754Compatible=true:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            text/plain:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
            text/json:
              schema:
                $ref: '#/components/schemas/ShapePageWithTotalCountDTO'
  /api/Shape/addupdate:
    post:
      tags:
        - Shape
      operationId: Shape_AddUpdate
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
  /api/Shape/addupdatereturnonlyid:
    post:
      tags:
        - Shape
      operationId: Shape_AddUpdateReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Circle'
                - $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=false:
              schema:
                type: integer
                format: int32
            application/json;IEEE754Compatible=true:
              schema:
                type: integer
                format: int32
            application/xml:
              schema:
                type: integer
                format: int32
            text/plain:
              schema:
                type: integer
                format: int32
            application/octet-stream:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
  /api/Shape/addupdatelist:
    post:
      tags:
        - Shape
      operationId: Shape_AddUpdateList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Circle'
                    - $ref: '#/components/schemas/Rectangle'
  /api/Shape/addupdatelistreturnonlyid:
    post:
      tags:
        - Shape
      operationId: Shape_AddUpdateListReturnOnlyID
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=false:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/json;IEEE754Compatible=true:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/xml:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          text/plain:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          text/json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
          application/*+json:
            schema:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=false:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/json;IEEE754Compatible=true:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/xml:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/plain:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
            text/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
  /api/Shape/remove/{id}:
    delete:
      tags:
        - Shape
      operationId: Shape_Remove
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /api/Shape/markasdeleted/{id}:
    delete:
      tags:
        - Shape
      operationId: Shape_MarkAsDeleted
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
  /odata/ShapeOData:
    get:
      tags:
        - ShapeCrud
      operationId: ShapeOData_Get
      parameters:
        - name: $filter
          in: query
          description: Filter the results
          schema:
            type: string
        - name: $select
          in: query
          description: Select specific fields
          schema:
            type: string
        - name: $orderby
          in: query
          description: Order the results
          schema:
            type: string
        - name: $top
          in: query
          description: Limit the number of results
          schema:
            type: integer
        - name: $skip
          in: query
          description: Skip a number of results
          schema:
            type: integer
        - name: $count
          in: query
          description: Include count of matching results
          schema:
            type: boolean
        - name: $expand
          in: query
          description: Expand related entities
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json;odata.metadata=none;odata.streaming=true:
              schema:
                required:
                  - value
                properties:
                  '@odata.count':
                    type: integer
                  value:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Circle'
                        - $ref: '#/components/schemas/Rectangle'
                additionalProperties: false
  /api/crud/shape/post:
    post:
      tags:
        - ShapeCrud
      operationId: ShapeCrud_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
          text/plain:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
          text/json:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ShapeInsert'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
  /api/crud/shape/patch:
    patch:
      tags:
        - ShapeCrud
      operationId: ShapeCrud_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
          application/json;IEEE754Compatible=false:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
          application/json;IEEE754Compatible=true:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
          text/plain:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ShapeUpdate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=false:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/json;IEEE754Compatible=true:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/xml:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/plain:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            application/octet-stream:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
            text/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Circle'
                  - $ref: '#/components/schemas/Rectangle'
  /api/crud/shape/delete:
    delete:
      tags:
        - ShapeCrud
      operationId: ShapeCrud_Delete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
  /api/crud/shape/softdelete:
    patch:
      tags:
        - ShapeCrud
      operationId: ShapeCrud_SoftDelete
      parameters:
        - name: Id
          in: query
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
            application/json;IEEE754Compatible=false:
              schema:
                type: boolean
            application/json;IEEE754Compatible=true:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/plain:
              schema:
                type: boolean
            application/octet-stream:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
components:
  schemas:
    AppClaimsEnum:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 66
        - 67
        - 68
        - 69
        - 70
        - 71
        - 72
        - 73
        - 74
        - 75
        - 76
        - 77
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 85
        - 86
        - 87
        - 88
        - 89
        - 90
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
        - 100
        - 101
        - 102
        - 103
        - 104
        - 105
        - 106
        - 107
        - 108
        - 109
        - 110
        - 111
        - 112
        - 113
        - 114
        - 115
        - 116
        - 117
        - 118
        - 119
        - 120
        - 121
        - 122
        - 123
        - 124
        - 125
        - 126
        - 127
        - 128
        - 129
        - 130
        - 131
        - 132
        - 133
        - 134
        - 135
        - 136
        - 137
        - 138
        - 139
        - 140
        - 141
        - 142
        - 143
        - 144
        - 145
        - 146
        - 147
        - 148
        - 149
        - 150
        - 151
        - 152
        - 153
        - 154
        - 155
        - 156
        - 157
        - 158
        - 159
        - 160
        - 161
        - 162
        - 163
        - 164
        - 165
        - 166
        - 167
        - 168
        - 169
        - 170
        - 171
        - 172
        - 173
        - 174
        - 175
        - 176
        - 177
        - 178
        - 179
        - 180
        - 181
        - 182
        - 183
        - 184
        - 185
        - 186
        - 187
        - 188
        - 189
        - 190
        - 191
        - 192
        - 193
        - 194
        - 195
        - 196
        - 197
        - 198
        - 199
        - 200
        - 201
        - 202
        - 203
        - 204
        - 205
        - 206
        - 207
        - 208
        - 209
        - 210
        - 211
        - 212
        - 213
        - 214
        - 215
        - 216
        - 217
        - 218
        - 219
        - 220
        - 221
        - 222
        - 223
        - 224
        - 225
        - 226
        - 227
        - 228
        - 229
        - 230
        - 231
        - 232
        - 233
        - 234
        - 235
        - 236
        - 237
        - 238
        - 239
        - 240
        - 241
        - 242
        - 243
        - 244
        - 245
        - 246
        - 247
        - 248
        - 249
        - 250
        - 251
        - 252
        - 253
        - 254
        - 255
        - 256
        - 257
        - 258
        - 259
        - 260
        - 261
        - 262
        - 263
        - 264
        - 265
        - 266
        - 267
        - 268
        - 269
        - 270
        - 271
        - 272
        - 273
        - 274
        - 275
        - 276
        - 277
        - 278
        - 279
        - 280
        - 281
        - 282
        - 283
        - 284
        - 285
        - 286
        - 287
        - 288
        - 289
        - 290
        - 291
        - 292
        - 293
        - 294
        - 295
        - 296
        - 297
        - 298
        - 299
        - 300
        - 301
        - 302
        - 303
        - 304
        - 305
        - 306
        - 307
        - 308
        - 309
        - 310
        - 343
        - 344
        - 345
        - 346
        - 347
        - 348
        - 349
        - 350
        - 351
        - 352
        - 353
        - 354
        - 355
        - 356
        - 357
        - 358
        - 391
        - 392
        - 393
        - 394
        - 395
        - 396
        - 397
        - 398
      type: integer
      format: int32
      x-enumNames:
        - ApplicationUser_Select
        - ApplicationUser_SelectList
        - ApplicationUser_Add
        - ApplicationUser_Update
        - ApplicationUser_Delete
        - ApplicationUser_AddUpdate
        - ApplicationUser_MarkDeleted
        - ApplicationUser_DataAdmin
        - ApplicationUserApplicationUserGroup_Select
        - ApplicationUserApplicationUserGroup_SelectList
        - ApplicationUserApplicationUserGroup_Add
        - ApplicationUserApplicationUserGroup_Update
        - ApplicationUserApplicationUserGroup_Delete
        - ApplicationUserApplicationUserGroup_AddUpdate
        - ApplicationUserApplicationUserGroup_MarkDeleted
        - ApplicationUserApplicationUserGroup_DataAdmin
        - ApplicationUserGroup_Select
        - ApplicationUserGroup_SelectList
        - ApplicationUserGroup_Add
        - ApplicationUserGroup_Update
        - ApplicationUserGroup_Delete
        - ApplicationUserGroup_AddUpdate
        - ApplicationUserGroup_MarkDeleted
        - ApplicationUserGroup_DataAdmin
        - ArchiveApplicationUser_Select
        - ArchiveApplicationUser_SelectList
        - ArchiveApplicationUser_Add
        - ArchiveApplicationUser_Update
        - ArchiveApplicationUser_Delete
        - ArchiveApplicationUser_AddUpdate
        - ArchiveApplicationUser_MarkDeleted
        - ArchiveApplicationUser_DataAdmin
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_Select
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_SelectList
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_Add
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_Update
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_Delete
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_AddUpdate
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_MarkDeleted
        - ArchiveDataMultiOwner_ApplicationUser_SampleEntity1_DataAdmin
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_Select
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_SelectList
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_Add
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_Update
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_Delete
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_AddUpdate
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_MarkDeleted
        - ArchiveDataMultiOwner_ApplicationUserGroup_SampleEntity1_DataAdmin
        - ArchiveNote_Select
        - ArchiveNote_SelectList
        - ArchiveNote_Add
        - ArchiveNote_Update
        - ArchiveNote_Delete
        - ArchiveNote_AddUpdate
        - ArchiveNote_MarkDeleted
        - ArchiveNote_DataAdmin
        - ArchiveSampleEntity1_Select
        - ArchiveSampleEntity1_SelectList
        - ArchiveSampleEntity1_Add
        - ArchiveSampleEntity1_Update
        - ArchiveSampleEntity1_Delete
        - ArchiveSampleEntity1_AddUpdate
        - ArchiveSampleEntity1_MarkDeleted
        - ArchiveSampleEntity1_DataAdmin
        - Book_Select
        - Book_SelectList
        - Book_Add
        - Book_Update
        - Book_Delete
        - Book_AddUpdate
        - Book_MarkDeleted
        - Book_DataAdmin
        - BookLibraryJT_Select
        - BookLibraryJT_SelectList
        - BookLibraryJT_Add
        - BookLibraryJT_Update
        - BookLibraryJT_Delete
        - BookLibraryJT_AddUpdate
        - BookLibraryJT_MarkDeleted
        - BookLibraryJT_DataAdmin
        - ClaimEnumsInApplicationUser_Select
        - ClaimEnumsInApplicationUser_SelectList
        - ClaimEnumsInApplicationUser_Add
        - ClaimEnumsInApplicationUser_Update
        - ClaimEnumsInApplicationUser_Delete
        - ClaimEnumsInApplicationUser_AddUpdate
        - ClaimEnumsInApplicationUser_MarkDeleted
        - ClaimEnumsInApplicationUser_DataAdmin
        - ClaimEnumsInApplicationUserGroup_Select
        - ClaimEnumsInApplicationUserGroup_SelectList
        - ClaimEnumsInApplicationUserGroup_Add
        - ClaimEnumsInApplicationUserGroup_Update
        - ClaimEnumsInApplicationUserGroup_Delete
        - ClaimEnumsInApplicationUserGroup_AddUpdate
        - ClaimEnumsInApplicationUserGroup_MarkDeleted
        - ClaimEnumsInApplicationUserGroup_DataAdmin
        - ClaimEnumsInClaimGroup_Select
        - ClaimEnumsInClaimGroup_SelectList
        - ClaimEnumsInClaimGroup_Add
        - ClaimEnumsInClaimGroup_Update
        - ClaimEnumsInClaimGroup_Delete
        - ClaimEnumsInClaimGroup_AddUpdate
        - ClaimEnumsInClaimGroup_MarkDeleted
        - ClaimEnumsInClaimGroup_DataAdmin
        - ClaimGroup_Select
        - ClaimGroup_SelectList
        - ClaimGroup_Add
        - ClaimGroup_Update
        - ClaimGroup_Delete
        - ClaimGroup_AddUpdate
        - ClaimGroup_MarkDeleted
        - ClaimGroup_DataAdmin
        - ClaimGroupsInApplicationUser_Select
        - ClaimGroupsInApplicationUser_SelectList
        - ClaimGroupsInApplicationUser_Add
        - ClaimGroupsInApplicationUser_Update
        - ClaimGroupsInApplicationUser_Delete
        - ClaimGroupsInApplicationUser_AddUpdate
        - ClaimGroupsInApplicationUser_MarkDeleted
        - ClaimGroupsInApplicationUser_DataAdmin
        - ClaimGroupsInApplicationUserGroup_Select
        - ClaimGroupsInApplicationUserGroup_SelectList
        - ClaimGroupsInApplicationUserGroup_Add
        - ClaimGroupsInApplicationUserGroup_Update
        - ClaimGroupsInApplicationUserGroup_Delete
        - ClaimGroupsInApplicationUserGroup_AddUpdate
        - ClaimGroupsInApplicationUserGroup_MarkDeleted
        - ClaimGroupsInApplicationUserGroup_DataAdmin
        - ClaimGroupsInClaimGroup_Select
        - ClaimGroupsInClaimGroup_SelectList
        - ClaimGroupsInClaimGroup_Add
        - ClaimGroupsInClaimGroup_Update
        - ClaimGroupsInClaimGroup_Delete
        - ClaimGroupsInClaimGroup_AddUpdate
        - ClaimGroupsInClaimGroup_MarkDeleted
        - ClaimGroupsInClaimGroup_DataAdmin
        - Cover_Select
        - Cover_SelectList
        - Cover_Add
        - Cover_Update
        - Cover_Delete
        - Cover_AddUpdate
        - Cover_MarkDeleted
        - Cover_DataAdmin
        - DataMultiOwner_ApplicationUser_Book_Select
        - DataMultiOwner_ApplicationUser_Book_SelectList
        - DataMultiOwner_ApplicationUser_Book_Add
        - DataMultiOwner_ApplicationUser_Book_Update
        - DataMultiOwner_ApplicationUser_Book_Delete
        - DataMultiOwner_ApplicationUser_Book_AddUpdate
        - DataMultiOwner_ApplicationUser_Book_MarkDeleted
        - DataMultiOwner_ApplicationUser_Book_DataAdmin
        - DataMultiOwner_ApplicationUser_Cover_Select
        - DataMultiOwner_ApplicationUser_Cover_SelectList
        - DataMultiOwner_ApplicationUser_Cover_Add
        - DataMultiOwner_ApplicationUser_Cover_Update
        - DataMultiOwner_ApplicationUser_Cover_Delete
        - DataMultiOwner_ApplicationUser_Cover_AddUpdate
        - DataMultiOwner_ApplicationUser_Cover_MarkDeleted
        - DataMultiOwner_ApplicationUser_Cover_DataAdmin
        - DataMultiOwner_ApplicationUser_Library_Select
        - DataMultiOwner_ApplicationUser_Library_SelectList
        - DataMultiOwner_ApplicationUser_Library_Add
        - DataMultiOwner_ApplicationUser_Library_Update
        - DataMultiOwner_ApplicationUser_Library_Delete
        - DataMultiOwner_ApplicationUser_Library_AddUpdate
        - DataMultiOwner_ApplicationUser_Library_MarkDeleted
        - DataMultiOwner_ApplicationUser_Library_DataAdmin
        - DataMultiOwner_ApplicationUser_Note_Select
        - DataMultiOwner_ApplicationUser_Note_SelectList
        - DataMultiOwner_ApplicationUser_Note_Add
        - DataMultiOwner_ApplicationUser_Note_Update
        - DataMultiOwner_ApplicationUser_Note_Delete
        - DataMultiOwner_ApplicationUser_Note_AddUpdate
        - DataMultiOwner_ApplicationUser_Note_MarkDeleted
        - DataMultiOwner_ApplicationUser_Note_DataAdmin
        - DataMultiOwner_ApplicationUser_SampleEntity1_Select
        - DataMultiOwner_ApplicationUser_SampleEntity1_SelectList
        - DataMultiOwner_ApplicationUser_SampleEntity1_Add
        - DataMultiOwner_ApplicationUser_SampleEntity1_Update
        - DataMultiOwner_ApplicationUser_SampleEntity1_Delete
        - DataMultiOwner_ApplicationUser_SampleEntity1_AddUpdate
        - DataMultiOwner_ApplicationUser_SampleEntity1_MarkDeleted
        - DataMultiOwner_ApplicationUser_SampleEntity1_DataAdmin
        - DataMultiOwner_ApplicationUser_SampleEntity2_Select
        - DataMultiOwner_ApplicationUser_SampleEntity2_SelectList
        - DataMultiOwner_ApplicationUser_SampleEntity2_Add
        - DataMultiOwner_ApplicationUser_SampleEntity2_Update
        - DataMultiOwner_ApplicationUser_SampleEntity2_Delete
        - DataMultiOwner_ApplicationUser_SampleEntity2_AddUpdate
        - DataMultiOwner_ApplicationUser_SampleEntity2_MarkDeleted
        - DataMultiOwner_ApplicationUser_SampleEntity2_DataAdmin
        - DataMultiOwner_ApplicationUserGroup_Book_Select
        - DataMultiOwner_ApplicationUserGroup_Book_SelectList
        - DataMultiOwner_ApplicationUserGroup_Book_Add
        - DataMultiOwner_ApplicationUserGroup_Book_Update
        - DataMultiOwner_ApplicationUserGroup_Book_Delete
        - DataMultiOwner_ApplicationUserGroup_Book_AddUpdate
        - DataMultiOwner_ApplicationUserGroup_Book_MarkDeleted
        - DataMultiOwner_ApplicationUserGroup_Book_DataAdmin
        - DataMultiOwner_ApplicationUserGroup_Cover_Select
        - DataMultiOwner_ApplicationUserGroup_Cover_SelectList
        - DataMultiOwner_ApplicationUserGroup_Cover_Add
        - DataMultiOwner_ApplicationUserGroup_Cover_Update
        - DataMultiOwner_ApplicationUserGroup_Cover_Delete
        - DataMultiOwner_ApplicationUserGroup_Cover_AddUpdate
        - DataMultiOwner_ApplicationUserGroup_Cover_MarkDeleted
        - DataMultiOwner_ApplicationUserGroup_Cover_DataAdmin
        - DataMultiOwner_ApplicationUserGroup_Library_Select
        - DataMultiOwner_ApplicationUserGroup_Library_SelectList
        - DataMultiOwner_ApplicationUserGroup_Library_Add
        - DataMultiOwner_ApplicationUserGroup_Library_Update
        - DataMultiOwner_ApplicationUserGroup_Library_Delete
        - DataMultiOwner_ApplicationUserGroup_Library_AddUpdate
        - DataMultiOwner_ApplicationUserGroup_Library_MarkDeleted
        - DataMultiOwner_ApplicationUserGroup_Library_DataAdmin
        - DataMultiOwner_ApplicationUserGroup_Note_Select
        - DataMultiOwner_ApplicationUserGroup_Note_SelectList
        - DataMultiOwner_ApplicationUserGroup_Note_Add
        - DataMultiOwner_ApplicationUserGroup_Note_Update
        - DataMultiOwner_ApplicationUserGroup_Note_Delete
        - DataMultiOwner_ApplicationUserGroup_Note_AddUpdate
        - DataMultiOwner_ApplicationUserGroup_Note_MarkDeleted
        - DataMultiOwner_ApplicationUserGroup_Note_DataAdmin
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_Select
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_SelectList
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_Add
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_Update
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_Delete
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_AddUpdate
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_MarkDeleted
        - DataMultiOwner_ApplicationUserGroup_SampleEntity1_DataAdmin
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_Select
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_SelectList
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_Add
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_Update
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_Delete
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_AddUpdate
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_MarkDeleted
        - DataMultiOwner_ApplicationUserGroup_SampleEntity2_DataAdmin
        - Library_Select
        - Library_SelectList
        - Library_Add
        - Library_Update
        - Library_Delete
        - Library_AddUpdate
        - Library_MarkDeleted
        - Library_DataAdmin
        - LoginRequest_Select
        - LoginRequest_SelectList
        - LoginRequest_Add
        - LoginRequest_Update
        - LoginRequest_Delete
        - LoginRequest_AddUpdate
        - LoginRequest_MarkDeleted
        - LoginRequest_DataAdmin
        - Note_Select
        - Note_SelectList
        - Note_Add
        - Note_Update
        - Note_Delete
        - Note_AddUpdate
        - Note_MarkDeleted
        - Note_DataAdmin
        - OrganisationNameStructure_Select
        - OrganisationNameStructure_SelectList
        - OrganisationNameStructure_Add
        - OrganisationNameStructure_Update
        - OrganisationNameStructure_Delete
        - OrganisationNameStructure_AddUpdate
        - OrganisationNameStructure_MarkDeleted
        - OrganisationNameStructure_DataAdmin
        - SampleEntity1_Select
        - SampleEntity1_SelectList
        - SampleEntity1_Add
        - SampleEntity1_Update
        - SampleEntity1_Delete
        - SampleEntity1_AddUpdate
        - SampleEntity1_MarkDeleted
        - SampleEntity1_DataAdmin
        - SampleEntity2_Select
        - SampleEntity2_SelectList
        - SampleEntity2_Add
        - SampleEntity2_Update
        - SampleEntity2_Delete
        - SampleEntity2_AddUpdate
        - SampleEntity2_MarkDeleted
        - SampleEntity2_DataAdmin
        - WelcomeRequest_Select
        - WelcomeRequest_SelectList
        - WelcomeRequest_Add
        - WelcomeRequest_Update
        - WelcomeRequest_Delete
        - WelcomeRequest_AddUpdate
        - WelcomeRequest_MarkDeleted
        - WelcomeRequest_DataAdmin
        - GlobalDataAdmin
        - Map_AllowAdd
        - RegisterData_AllowAdd
        - Settings_AllowAdd
        - abc
        - GPR
        - LSC
        - Circle_Select
        - Circle_SelectList
        - Circle_Add
        - Circle_Update
        - Circle_Delete
        - Circle_AddUpdate
        - Circle_MarkDeleted
        - Circle_DataAdmin
        - Rectangle_Select
        - Rectangle_SelectList
        - Rectangle_Add
        - Rectangle_Update
        - Rectangle_Delete
        - Rectangle_AddUpdate
        - Rectangle_MarkDeleted
        - Rectangle_DataAdmin
        - Canvas_Select
        - Canvas_SelectList
        - Canvas_Add
        - Canvas_Update
        - Canvas_Delete
        - Canvas_AddUpdate
        - Canvas_MarkDeleted
        - Canvas_DataAdmin
        - Shape_Select
        - Shape_SelectList
        - Shape_Add
        - Shape_Update
        - Shape_Delete
        - Shape_AddUpdate
        - Shape_MarkDeleted
        - Shape_DataAdmin
    ApplicationUser:
      required:
        - firstName
        - lastName
        - org
        - licence
        - isDisabled
        - id
        - isDeleted
        - lastUpdatedDateTime
        - oidcId
        - name
        - userName
        - email
        - phoneNumber
        - isEnabled
        - failedLoginAttempts
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        org:
          type: string
          nullable: true
        licence:
          type: string
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        oidcId:
          type: string
        name:
          type: string
        userName:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        failedLoginAttempts:
          type: integer
          format: int32
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
        claimEnumsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUser'
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
      additionalProperties: false
    ApplicationUserApplicationUserGroup:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - name
        - applicationUserId
        - applicationUserGroupId
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        applicationUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
        applicationUserId:
          type: string
          format: uuid
        applicationUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
        applicationUserGroupId:
          type: string
          format: uuid
      additionalProperties: false
    ApplicationUserApplicationUserGroupInsert:
      required:
        - applicationUser
        - applicationUserGroup
        - applicationUserGroupId
        - applicationUserId
      type: object
      properties:
        name:
          type: string
          nullable: true
        applicationUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
          nullable: true
        applicationUserId:
          type: string
          format: uuid
        applicationUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
          nullable: true
        applicationUserGroupId:
          type: string
          format: uuid
      additionalProperties: false
      description: ApplicationUserApplicationUserGroup without database generated properties
    ApplicationUserApplicationUserGroupUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        applicationUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        applicationUserId:
          type: string
          format: uuid
        applicationUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
          nullable: true
        applicationUserGroupId:
          type: string
          format: uuid
      additionalProperties: false
      description:
        ApplicationUserApplicationUserGroup with all properties optional
        except PKs
    ApplicationUserApplicationUserGroupUpdateWithoutPKs:
      type: object
      properties:
        name:
          type: string
          nullable: true
        applicationUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        applicationUserId:
          type: string
          format: uuid
        applicationUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
          nullable: true
        applicationUserGroupId:
          type: string
          format: uuid
      additionalProperties: false
      description: ApplicationUserApplicationUserGroup without PKs and database
        generated properties and with all properties optional
    ApplicationUserDTO:
      required:
        - email
        - name
        - oidcId
        - userName
      type: object
      properties:
        id:
          type: string
          format: uuid
        oidcId:
          type: string
          nullable: true
        userName:
          type: string
        name:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        isLocked:
          type: boolean
      additionalProperties: false
    ApplicationUserGroup:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - name
        - parentGroupId
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
          nullable: true
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroup'
        claimEnumsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroup'
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
        parentGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
          nullable: true
        parentGroupId:
          type: string
          format: uuid
          nullable: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserGroup'
        organisationNameStructure:
          allOf:
            - $ref: '#/components/schemas/OrganisationNameStructure'
          nullable: true
      additionalProperties: false
    ApplicationUserGroupInsert:
      type: object
      properties:
        name:
          type: string
          nullable: true
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroupInsert'
          nullable: true
        claimEnumsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroupInsert'
          nullable: true
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroupInsert'
          nullable: true
        parentGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
          nullable: true
        parentGroupId:
          type: string
          format: uuid
          nullable: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserGroupInsert'
          nullable: true
        organisationNameStructure:
          allOf:
            - $ref: '#/components/schemas/OrganisationNameStructureInsert'
          nullable: true
      additionalProperties: false
      description: ApplicationUserGroup without database generated properties
    ApplicationUserGroupPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserGroup'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    ApplicationUserGroupUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroupUpdate'
          nullable: true
        claimEnumsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroupUpdate'
          nullable: true
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroupUpdate'
          nullable: true
        parentGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
          nullable: true
        parentGroupId:
          type: string
          format: uuid
          nullable: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserGroupUpdate'
          nullable: true
        organisationNameStructure:
          allOf:
            - $ref: '#/components/schemas/OrganisationNameStructureUpdateWithoutPKs'
          nullable: true
      additionalProperties: false
      description: ApplicationUserGroup with all properties optional except PKs
    ApplicationUserGroupUpdateWithoutPKs:
      type: object
      properties:
        name:
          type: string
          nullable: true
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroupUpdate'
          nullable: true
        claimEnumsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserGroupUpdate'
          nullable: true
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroupUpdate'
          nullable: true
        parentGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
          nullable: true
        parentGroupId:
          type: string
          format: uuid
          nullable: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserGroupUpdate'
          nullable: true
        organisationNameStructure:
          allOf:
            - $ref: '#/components/schemas/OrganisationNameStructureUpdateWithoutPKs'
          nullable: true
      additionalProperties: false
      description:
        ApplicationUserGroup without PKs and database generated properties
        and with all properties optional
    ApplicationUserInsert:
      required:
        - name
        - oidcId
        - userName
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        org:
          type: string
          nullable: true
        licence:
          type: string
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        oidcId:
          type: string
        name:
          type: string
        userName:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        failedLoginAttempts:
          type: integer
          format: int32
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroupInsert'
          nullable: true
        claimEnumsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserInsert'
          nullable: true
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserInsert'
          nullable: true
      additionalProperties: false
      description: ApplicationUser without database generated properties
    ApplicationUserPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUser'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    ApplicationUserUpdate:
      required:
        - id
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        org:
          type: string
          nullable: true
        licence:
          type: string
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        id:
          type: string
          format: uuid
        oidcId:
          type: string
        name:
          type: string
        userName:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        failedLoginAttempts:
          type: integer
          format: int32
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroupUpdate'
          nullable: true
        claimEnumsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserUpdate'
          nullable: true
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserUpdate'
          nullable: true
      additionalProperties: false
      description: ApplicationUser with all properties optional except PKs
    ApplicationUserUpdateWithoutPKs:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        org:
          type: string
          nullable: true
        licence:
          type: string
          nullable: true
        isDisabled:
          type: boolean
          nullable: true
        oidcId:
          type: string
        name:
          type: string
        userName:
          type: string
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        isEnabled:
          type: boolean
        failedLoginAttempts:
          type: integer
          format: int32
        applicationUserApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserApplicationUserGroupUpdate'
          nullable: true
        claimEnumsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInApplicationUserUpdate'
          nullable: true
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserUpdate'
          nullable: true
      additionalProperties: false
      description:
        ApplicationUser without PKs and database generated properties and
        with all properties optional
    ApplicationUsersToApplicationUserGroupsDTO:
      type: object
      properties:
        applicationUsersGroups:
          type: array
          items:
            type: string
            format: uuid
        applicationUsersToAdd:
          type: array
          items:
            type: string
            format: uuid
        applicationUsersToRemove:
          type: array
          items:
            type: string
            format: uuid
        removeExistingUnMentioned:
          type: boolean
      additionalProperties: false
    AuthDTO:
      required:
        - applicationUser
        - token
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          format: int32
        applicationUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserDTO'
      additionalProperties: false
    AuthErrorDetails:
      type: object
      properties:
        title:
          type: string
        details:
          type: string
        context:
          type: string
      additionalProperties: false
    BaseDataMultiOwner:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
      additionalProperties: false
    BaseDataMultiOwnerInsert:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
      additionalProperties: false
      description: BaseDataMultiOwner without database generated properties
    BaseDataMultiOwnerUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
      additionalProperties: false
      description: BaseDataMultiOwner with all properties optional except PKs
    BaseDataMultiOwnerUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
      additionalProperties: false
      description:
        BaseDataMultiOwner without PKs and database generated properties
        and with all properties optional
    Book:
      required:
        - name
        - bookType
        - completedAt
        - publishedOn
        - title
        - hasPictures
        - price
        - purchases
        - secret
        - libraryId
        - metadata
        - metadataList
        - pages
        - notMapped_String
        - notMapped_BoolArr
        - notMapped_StringEnumerable
        - notMapped_Note
        - id
        - isDeleted
        - lastUpdatedDateTime
        - createdUserId
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        bookType:
          allOf:
            - $ref: '#/components/schemas/BookType'
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        publishedOn:
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
          description: '123'
          nullable: true
        title:
          type: string
        hasPictures:
          type: boolean
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        purchases:
          type: integer
          format: int32
          nullable: true
        secret:
          type: string
          nullable: true
        libraryId:
          type: string
          format: uuid
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/Library'
          nullable: true
        cover:
          allOf:
            - $ref: '#/components/schemas/Cover'
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        bookLibraryJT:
          type: array
          items:
            $ref: '#/components/schemas/BookLibraryJT'
        metadata:
          allOf:
            - $ref: '#/components/schemas/BookMetadata'
          nullable: true
        metadataList:
          type: array
          items:
            $ref: '#/components/schemas/BookMetadata'
          nullable: true
        pages:
          type: integer
          format: int32
        notMapped_String:
          type: string
        notMapped_BoolArr:
          type: array
          items:
            type: boolean
        notMapped_StringEnumerable:
          type: array
          items:
            type: string
        notMapped_Note:
          allOf:
            - $ref: '#/components/schemas/Note'
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        createdUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
          nullable: true
        createdUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_Book'
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_Book'
      additionalProperties: false
    BookInsert:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        bookType:
          allOf:
            - $ref: '#/components/schemas/BookType'
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        publishedOn:
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
          description: '123'
          nullable: true
        title:
          type: string
        hasPictures:
          type: boolean
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        purchases:
          type: integer
          format: int32
          nullable: true
        secret:
          type: string
          nullable: true
        superSecret:
          type: string
          nullable: true
          writeOnly: true
        libraryId:
          type: string
          format: uuid
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/LibraryInsert'
          nullable: true
        cover:
          allOf:
            - $ref: '#/components/schemas/CoverInsert'
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteInsert'
          nullable: true
        bookLibraryJT:
          type: array
          items:
            $ref: '#/components/schemas/BookLibraryJTInsert'
          nullable: true
        metadata:
          allOf:
            - $ref: '#/components/schemas/BookMetadata'
          nullable: true
        metadataList:
          type: array
          items:
            $ref: '#/components/schemas/BookMetadata'
          nullable: true
        createdUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
          nullable: true
        createdUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_BookInsert'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_BookInsert'
          nullable: true
      additionalProperties: false
      description: Book without database generated properties
    BookLibraryJT:
      required:
        - name
        - isDeleted
        - lastUpdatedDateTime
        - bookId
        - libraryId
      type: object
      properties:
        book:
          allOf:
            - $ref: '#/components/schemas/Book'
        library:
          allOf:
            - $ref: '#/components/schemas/Library'
        name:
          type: string
          nullable: true
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        bookId:
          type: string
          format: uuid
        libraryId:
          type: string
          format: uuid
      additionalProperties: false
    BookLibraryJTInsert:
      required:
        - book
        - bookId
        - library
        - libraryId
      type: object
      properties:
        book:
          allOf:
            - $ref: '#/components/schemas/BookInsert'
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/LibraryInsert'
          nullable: true
        name:
          type: string
          nullable: true
        bookId:
          type: string
          format: uuid
        libraryId:
          type: string
          format: uuid
      additionalProperties: false
      description: BookLibraryJT without database generated properties
    BookLibraryJTPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/BookLibraryJT'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    BookLibraryJTUpdate:
      required:
        - bookId
        - libraryId
      type: object
      properties:
        book:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
          nullable: true
        name:
          type: string
          nullable: true
        bookId:
          type: string
          format: uuid
        libraryId:
          type: string
          format: uuid
      additionalProperties: false
      description: BookLibraryJT with all properties optional except PKs
    BookLibraryJTUpdateWithoutPKs:
      type: object
      properties:
        book:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
      description:
        BookLibraryJT without PKs and database generated properties and
        with all properties optional
    BookMetadata:
      required:
        - eTag
        - publishStatus
      type: object
      properties:
        eTag:
          type: string
        publishStatus:
          allOf:
            - $ref: '#/components/schemas/BookPublishStatus'
          x-enumNames:
            - Draft
            - Published
      additionalProperties: false
    BookPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Book'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    BookPublishStatus:
      enum:
        - 0
        - 1
      type: integer
      format: int32
      x-enumNames:
        - Draft
        - Published
    BookType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
      x-enumNames:
        - Hardcover
        - EBook
    BookUpdate:
      required:
        - id
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        bookType:
          allOf:
            - $ref: '#/components/schemas/BookType'
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        publishedOn:
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
          description: '123'
          nullable: true
        title:
          type: string
        hasPictures:
          type: boolean
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        purchases:
          type: integer
          format: int32
          nullable: true
        secret:
          type: string
          nullable: true
        superSecret:
          type: string
          nullable: true
          writeOnly: true
        libraryId:
          type: string
          format: uuid
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
          nullable: true
        cover:
          allOf:
            - $ref: '#/components/schemas/CoverUpdateWithoutPKs'
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteUpdate'
          nullable: true
        bookLibraryJT:
          type: array
          items:
            $ref: '#/components/schemas/BookLibraryJTUpdate'
          nullable: true
        metadata:
          allOf:
            - $ref: '#/components/schemas/BookMetadata'
          nullable: true
        metadataList:
          type: array
          items:
            $ref: '#/components/schemas/BookMetadata'
          nullable: true
        id:
          type: string
          format: uuid
        createdUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        createdUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_BookUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_BookUpdate'
          nullable: true
      additionalProperties: false
      description: Book with all properties optional except PKs
    BookUpdateWithoutPKs:
      type: object
      properties:
        name:
          maxLength: 30
          minLength: 0
          type: string
        bookType:
          allOf:
            - $ref: '#/components/schemas/BookType'
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        publishedOn:
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
          description: '123'
          nullable: true
        title:
          type: string
        hasPictures:
          type: boolean
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        purchases:
          type: integer
          format: int32
          nullable: true
        secret:
          type: string
          nullable: true
        superSecret:
          type: string
          nullable: true
          writeOnly: true
        libraryId:
          type: string
          format: uuid
          nullable: true
        library:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
          nullable: true
        cover:
          allOf:
            - $ref: '#/components/schemas/CoverUpdateWithoutPKs'
          nullable: true
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NoteUpdate'
          nullable: true
        bookLibraryJT:
          type: array
          items:
            $ref: '#/components/schemas/BookLibraryJTUpdate'
          nullable: true
        metadata:
          allOf:
            - $ref: '#/components/schemas/BookMetadata'
          nullable: true
        metadataList:
          type: array
          items:
            $ref: '#/components/schemas/BookMetadata'
          nullable: true
        createdUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        createdUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_BookUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_BookUpdate'
          nullable: true
      additionalProperties: false
      description:
        Book without PKs and database generated properties and with all
        properties optional
    Canvas:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - mainShapeId
      type: object
      properties:
        mainShape:
          oneOf:
            - $ref: '#/components/schemas/Circle'
            - $ref: '#/components/schemas/Rectangle'
        shapes:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Circle'
              - $ref: '#/components/schemas/Rectangle'
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        mainShapeId:
          type: string
          format: uuid
      additionalProperties: false
    CanvasInsert:
      required:
        - mainShape
        - mainShapeId
      type: object
      properties:
        mainShape:
          allOf:
            - $ref: '#/components/schemas/ShapeInsert'
        shapes:
          type: array
          items:
            $ref: '#/components/schemas/ShapeInsert'
          nullable: true
        mainShapeId:
          type: string
          format: uuid
      additionalProperties: false
      description: Canvas without database generated properties
    CanvasPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Canvas'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    CanvasUpdate:
      required:
        - id
      type: object
      properties:
        mainShape:
          allOf:
            - $ref: '#/components/schemas/ShapeUpdateWithoutPKs'
        shapes:
          type: array
          items:
            $ref: '#/components/schemas/ShapeUpdate'
          nullable: true
        id:
          type: string
          format: uuid
        mainShapeId:
          type: string
          format: uuid
      additionalProperties: false
      description: Canvas with all properties optional except PKs
    CanvasUpdateWithoutPKs:
      type: object
      properties:
        mainShape:
          allOf:
            - $ref: '#/components/schemas/ShapeUpdateWithoutPKs'
        shapes:
          type: array
          items:
            $ref: '#/components/schemas/ShapeUpdate'
          nullable: true
        mainShapeId:
          type: string
          format: uuid
      additionalProperties: false
      description:
        Canvas without PKs and database generated properties and with all
        properties optional
    Circle:
      allOf:
        - $ref: '#/components/schemas/Shape'
        - required:
            - radius
          type: object
          properties:
            radius:
              type: number
              format: double
          additionalProperties: false
    CircleInsert:
      type: object
      additionalProperties: false
      description: Circle without database generated properties
    CirclePageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Circle'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    CircleUpdate:
      required:
        - id
      type: object
      additionalProperties: false
      description: Circle with all properties optional except PKs
    CircleUpdateWithoutPKs:
      type: object
      additionalProperties: false
      description:
        Circle without PKs and database generated properties and with all
        properties optional
    ClaimBaseDTO:
      type: object
      properties:
        claimType:
          allOf:
            - $ref: '#/components/schemas/CustomClaimsTypesEnum'
          x-enumNames:
            - ServerClaim
            - UXClaim
            - TableClaim
        claimValue:
          type: integer
          format: int32
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
      additionalProperties: false
    ClaimEnumsInApplicationUser:
      required:
        - claimValue
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - priorityOfPermission
        - allow
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    ClaimEnumsInApplicationUserGroup:
      required:
        - claimValue
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - priorityOfPermission
        - allow
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    ClaimEnumsInApplicationUserGroupInsert:
      required:
        - record
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description: ClaimEnumsInApplicationUserGroup without database generated properties
    ClaimEnumsInApplicationUserGroupUpdate:
      required:
        - id
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: ClaimEnumsInApplicationUserGroup with all properties optional except PKs
    ClaimEnumsInApplicationUserGroupUpdateWithoutPKs:
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        ClaimEnumsInApplicationUserGroup without PKs and database generated
        properties and with all properties optional
    ClaimEnumsInApplicationUserInsert:
      required:
        - record
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description: ClaimEnumsInApplicationUser without database generated properties
    ClaimEnumsInApplicationUserUpdate:
      required:
        - id
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description: ClaimEnumsInApplicationUser with all properties optional except PKs
    ClaimEnumsInApplicationUserUpdateWithoutPKs:
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        ClaimEnumsInApplicationUser without PKs and database generated
        properties and with all properties optional
    ClaimEnumsInClaimGroup:
      required:
        - claimValue
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - priorityOfPermission
        - allow
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroup'
      additionalProperties: false
    ClaimEnumsInClaimGroupInsert:
      required:
        - record
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupInsert'
      additionalProperties: false
      description: ClaimEnumsInClaimGroup without database generated properties
    ClaimEnumsInClaimGroupUpdate:
      required:
        - id
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
      additionalProperties: false
      description: ClaimEnumsInClaimGroup with all properties optional except PKs
    ClaimEnumsInClaimGroupUpdateWithoutPKs:
      type: object
      properties:
        claimValue:
          type: integer
          format: int32
        recordId:
          type: string
          format: uuid
        priorityOfPermission:
          type: integer
          format: int32
        allow:
          type: boolean
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
      additionalProperties: false
      description: ClaimEnumsInClaimGroup without PKs and database generated
        properties and with all properties optional
    ClaimEnumsToAddUpdateDeleteDTO:
      type: object
      properties:
        claimSets:
          type: array
          items:
            type: string
            format: uuid
        claimBaseToAddUpdate:
          type: array
          items:
            $ref: '#/components/schemas/ClaimBaseDTO'
        claimEnumsToRemoveValue:
          type: array
          items:
            type: integer
            format: int32
        removeExistingUnMentionedClaimBase:
          type: boolean
      additionalProperties: false
    ClaimGroup:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - name
        - builtInGroup
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        builtInGroup:
          type: boolean
        claimEnumsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInClaimGroup'
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroup'
        claimGroupsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInClaimGroup'
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUser'
      additionalProperties: false
    ClaimGroupAddUpdateDeleteDTO:
      type: object
      properties:
        claimGroupSets:
          type: array
          items:
            type: string
            format: uuid
        claimGroupsToAddUpdate:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroup'
        claimGroupsToRemove:
          type: array
          items:
            type: string
            format: uuid
        removeExistingUnMentionedClaimGroups:
          type: boolean
      additionalProperties: false
    ClaimGroupInsert:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        builtInGroup:
          type: boolean
        claimEnumsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInClaimGroupInsert'
          nullable: true
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroupInsert'
          nullable: true
        claimGroupsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInClaimGroupInsert'
          nullable: true
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserInsert'
          nullable: true
      additionalProperties: false
      description: ClaimGroup without database generated properties
    ClaimGroupPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroup'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    ClaimGroupUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        builtInGroup:
          type: boolean
        claimEnumsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInClaimGroupUpdate'
          nullable: true
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroupUpdate'
          nullable: true
        claimGroupsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInClaimGroupUpdate'
          nullable: true
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserUpdate'
          nullable: true
      additionalProperties: false
      description: ClaimGroup with all properties optional except PKs
    ClaimGroupUpdateWithoutPKs:
      type: object
      properties:
        name:
          type: string
        builtInGroup:
          type: boolean
        claimEnumsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimEnumsInClaimGroupUpdate'
          nullable: true
        claimGroupsInApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserGroupUpdate'
          nullable: true
        claimGroupsInClaimGroups:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInClaimGroupUpdate'
          nullable: true
        claimGroupsInApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/ClaimGroupsInApplicationUserUpdate'
          nullable: true
      additionalProperties: false
      description:
        ClaimGroup without PKs and database generated properties and with
        all properties optional
    ClaimGroupsInApplicationUser:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - claimGroupId
        - recordId
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroup'
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
    ClaimGroupsInApplicationUserGroup:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - claimGroupId
        - recordId
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroup'
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
    ClaimGroupsInApplicationUserGroupInsert:
      required:
        - claimGroup
        - claimGroupId
        - record
        - recordId
      type: object
      properties:
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupInsert'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInApplicationUserGroup without database generated properties
    ClaimGroupsInApplicationUserGroupUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInApplicationUserGroup with all properties optional except PKs
    ClaimGroupsInApplicationUserGroupUpdateWithoutPKs:
      type: object
      properties:
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInApplicationUserGroup without PKs and database
        generated properties and with all properties optional
    ClaimGroupsInApplicationUserInsert:
      required:
        - claimGroup
        - claimGroupId
        - record
        - recordId
      type: object
      properties:
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupInsert'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInApplicationUser without database generated properties
    ClaimGroupsInApplicationUserUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInApplicationUser with all properties optional except PKs
    ClaimGroupsInApplicationUserUpdateWithoutPKs:
      type: object
      properties:
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description:
        ClaimGroupsInApplicationUser without PKs and database generated
        properties and with all properties optional
    ClaimGroupsInClaimGroup:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - claimGroupId
        - recordId
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroup'
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroup'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
    ClaimGroupsInClaimGroupInsert:
      required:
        - claimGroup
        - claimGroupId
        - record
        - recordId
      type: object
      properties:
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupInsert'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupInsert'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInClaimGroup without database generated properties
    ClaimGroupsInClaimGroupUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInClaimGroup with all properties optional except PKs
    ClaimGroupsInClaimGroupUpdateWithoutPKs:
      type: object
      properties:
        claimGroup:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
          nullable: true
        claimGroupId:
          type: string
          format: uuid
        record:
          allOf:
            - $ref: '#/components/schemas/ClaimGroupUpdateWithoutPKs'
        recordId:
          type: string
          format: uuid
      additionalProperties: false
      description: ClaimGroupsInClaimGroup without PKs and database generated
        properties and with all properties optional
    Cover:
      required:
        - size
        - id
        - isDeleted
        - lastUpdatedDateTime
        - ownerUserId
        - bookId
      type: object
      properties:
        size:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/Book'
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        ownerUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
          nullable: true
        ownerUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_Cover'
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_Cover'
        bookId:
          type: string
          format: uuid
      additionalProperties: false
    CoverInsert:
      required:
        - book
        - bookId
        - size
      type: object
      properties:
        size:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/BookInsert'
          nullable: true
        ownerUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
          nullable: true
        ownerUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_CoverInsert'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_CoverInsert'
          nullable: true
        bookId:
          type: string
          format: uuid
      additionalProperties: false
      description: Cover without database generated properties
    CoverPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Cover'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    CoverUpdate:
      required:
        - id
      type: object
      properties:
        size:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
          nullable: true
        id:
          type: string
          format: uuid
        ownerUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        ownerUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_CoverUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_CoverUpdate'
          nullable: true
        bookId:
          type: string
          format: uuid
      additionalProperties: false
      description: Cover with all properties optional except PKs
    CoverUpdateWithoutPKs:
      type: object
      properties:
        size:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
          nullable: true
        ownerUser:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        ownerUserId:
          type: string
          format: uuid
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_CoverUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_CoverUpdate'
          nullable: true
        bookId:
          type: string
          format: uuid
      additionalProperties: false
      description:
        Cover without PKs and database generated properties and with all
        properties optional
    CustomClaimsTypesEnum:
      enum:
        - 1
        - 2
        - 4
      type: integer
      format: int32
      x-enumNames:
        - ServerClaim
        - UXClaim
        - TableClaim
    CustomClaimsTypesEnumStringInt32DictionaryListTuple:
      required:
        - item1
        - item2
      type: object
      properties:
        item1:
          allOf:
            - $ref: '#/components/schemas/CustomClaimsTypesEnum'
          x-enumNames:
            - ServerClaim
            - UXClaim
            - TableClaim
        item2:
          type: array
          items:
            type: object
            additionalProperties:
              type: integer
              format: int32
          nullable: true
      additionalProperties: false
    CustomClaimsTypesEnumStringInt32DictionaryStringTupleListTuple:
      required:
        - item1
        - item2
      type: object
      properties:
        item1:
          allOf:
            - $ref: '#/components/schemas/CustomClaimsTypesEnum'
          x-enumNames:
            - ServerClaim
            - UXClaim
            - TableClaim
        item2:
          type: array
          items:
            $ref: '#/components/schemas/StringInt32DictionaryStringTuple'
          nullable: true
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_Book:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Book'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_BookInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/BookInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_Book without database generated
        properties
    DataMultiOwner_ApplicationUserGroup_BookUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_Book with all properties
        optional except PKs
    DataMultiOwner_ApplicationUserGroup_BookUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_Book without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUserGroup_Cover:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Cover'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_CoverInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/CoverInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_Cover without database
        generated properties
    DataMultiOwner_ApplicationUserGroup_CoverUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/CoverUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_Cover with all properties
        optional except PKs
    DataMultiOwner_ApplicationUserGroup_CoverUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/CoverUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_Cover without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUserGroup_Library:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Library'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_LibraryInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/LibraryInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_Library without database
        generated properties
    DataMultiOwner_ApplicationUserGroup_LibraryUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_Library with all properties
        optional except PKs
    DataMultiOwner_ApplicationUserGroup_LibraryUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_Library without PKs and
        database generated properties and with all properties optional
    DataMultiOwner_ApplicationUserGroup_Note:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Note'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_NoteInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/NoteInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_Note without database generated
        properties
    DataMultiOwner_ApplicationUserGroup_NoteUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_Note with all properties
        optional except PKs
    DataMultiOwner_ApplicationUserGroup_NoteUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_Note without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUserGroup_SampleEntity1:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_SampleEntity1Insert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1Insert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_SampleEntity1 without database
        generated properties
    DataMultiOwner_ApplicationUserGroup_SampleEntity1Update:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_SampleEntity1 with all
        properties optional except PKs
    DataMultiOwner_ApplicationUserGroup_SampleEntity1UpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_SampleEntity1 without PKs and
        database generated properties and with all properties optional
    DataMultiOwner_ApplicationUserGroup_SampleEntity2:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroup'
      additionalProperties: false
    DataMultiOwner_ApplicationUserGroup_SampleEntity2Insert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2Insert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupInsert'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_SampleEntity2 without database
        generated properties
    DataMultiOwner_ApplicationUserGroup_SampleEntity2Update:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUserGroup_SampleEntity2 with all
        properties optional except PKs
    DataMultiOwner_ApplicationUserGroup_SampleEntity2UpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserGroupUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUserGroup_SampleEntity2 without PKs and
        database generated properties and with all properties optional
    DataMultiOwner_ApplicationUser_Book:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Book'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    DataMultiOwner_ApplicationUser_BookInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/BookInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_Book without database generated properties
    DataMultiOwner_ApplicationUser_BookUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Book with all properties optional
        except PKs
    DataMultiOwner_ApplicationUser_BookUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_Book without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUser_Cover:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Cover'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    DataMultiOwner_ApplicationUser_CoverInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/CoverInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Cover without database generated
        properties
    DataMultiOwner_ApplicationUser_CoverUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/CoverUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Cover with all properties optional
        except PKs
    DataMultiOwner_ApplicationUser_CoverUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/CoverUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_Cover without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUser_Library:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Library'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    DataMultiOwner_ApplicationUser_LibraryInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/LibraryInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Library without database generated
        properties
    DataMultiOwner_ApplicationUser_LibraryUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Library with all properties optional
        except PKs
    DataMultiOwner_ApplicationUser_LibraryUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/LibraryUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Library without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUser_Note:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/Note'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    DataMultiOwner_ApplicationUser_NoteInsert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/NoteInsert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_Note without database generated properties
    DataMultiOwner_ApplicationUser_NoteUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_Note with all properties optional
        except PKs
    DataMultiOwner_ApplicationUser_NoteUpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_Note without PKs and database
        generated properties and with all properties optional
    DataMultiOwner_ApplicationUser_SampleEntity1:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    DataMultiOwner_ApplicationUser_SampleEntity1Insert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1Insert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_SampleEntity1 without database
        generated properties
    DataMultiOwner_ApplicationUser_SampleEntity1Update:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_SampleEntity1 with all properties
        optional except PKs
    DataMultiOwner_ApplicationUser_SampleEntity1UpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity1UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_SampleEntity1 without PKs and
        database generated properties and with all properties optional
    DataMultiOwner_ApplicationUser_SampleEntity2:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - recordId
        - appUserOrAppUserGroupId
        - permTypes
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
      additionalProperties: false
    DataMultiOwner_ApplicationUser_SampleEntity2Insert:
      required:
        - appUserOrAppUserGroup
        - record
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2Insert'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_SampleEntity2 without database
        generated properties
    DataMultiOwner_ApplicationUser_SampleEntity2Update:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description:
        DataMultiOwner_ApplicationUser_SampleEntity2 with all properties
        optional except PKs
    DataMultiOwner_ApplicationUser_SampleEntity2UpdateWithoutPKs:
      type: object
      properties:
        recordId:
          type: string
          format: uuid
        appUserOrAppUserGroupId:
          type: string
          format: uuid
        permTypes:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
        record:
          allOf:
            - $ref: '#/components/schemas/SampleEntity2UpdateWithoutPKs'
        appUserOrAppUserGroup:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
      additionalProperties: false
      description: DataMultiOwner_ApplicationUser_SampleEntity2 without PKs and
        database generated properties and with all properties optional
    DataRecordAddUpdateDeletePermissionTableSubListDTO:
      required:
        - tableName
      type: object
      properties:
        tableName:
          type: string
        recordIdsInSetToApplyPermissionsTo:
          type: array
          items:
            type: string
            format: uuid
        recordIdsInSetToRemovePermissionsFrom:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
    EdmContainerElementKind:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
      x-enumNames:
        - None
        - EntitySet
        - ActionImport
        - FunctionImport
        - Singleton
    EdmExpressionKind:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
      type: integer
      format: int32
      x-enumNames:
        - None
        - BinaryConstant
        - BooleanConstant
        - DateTimeOffsetConstant
        - DecimalConstant
        - FloatingConstant
        - GuidConstant
        - IntegerConstant
        - StringConstant
        - DurationConstant
        - 'Null'
        - Record
        - Collection
        - Path
        - If
        - Cast
        - IsOf
        - FunctionApplication
        - LabeledExpressionReference
        - Labeled
        - PropertyPath
        - NavigationPropertyPath
        - DateConstant
        - TimeOfDayConstant
        - EnumMember
        - AnnotationPath
    EdmSchemaElementKind:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
      x-enumNames:
        - None
        - TypeDefinition
        - Term
        - Action
        - EntityContainer
        - Function
    EdmTypeKind:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      format: int32
      x-enumNames:
        - None
        - Primitive
        - Entity
        - Complex
        - Collection
        - EntityReference
        - Enum
        - TypeDefinition
        - Untyped
        - Path
    EntityWithPermissionsDTO:
      required:
        - rowDisplayName
        - rowId
        - userGroupsWithPermission
        - usersWithPermission
      type: object
      properties:
        usersWithPermission:
          type: array
          items:
            $ref: '#/components/schemas/UserPermissionTypeDTO'
        userGroupsWithPermission:
          type: array
          items:
            $ref: '#/components/schemas/UserPermissionTypeDTO'
        rowId:
          type: string
          format: uuid
        rowDisplayName:
          type: string
          nullable: true
      additionalProperties: false
    IEdmDirectValueAnnotationsManager:
      type: object
      additionalProperties: false
    IEdmEntityContainer:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        schemaElementKind:
          allOf:
            - $ref: '#/components/schemas/EdmSchemaElementKind'
          readOnly: true
          x-enumNames:
            - None
            - TypeDefinition
            - Term
            - Action
            - EntityContainer
            - Function
        namespace:
          type: string
          nullable: true
          readOnly: true
        elements:
          type: array
          items:
            $ref: '#/components/schemas/IEdmEntityContainerElement'
          nullable: true
          readOnly: true
      additionalProperties: false
    IEdmEntityContainerElement:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        containerElementKind:
          allOf:
            - $ref: '#/components/schemas/EdmContainerElementKind'
          readOnly: true
          x-enumNames:
            - None
            - EntitySet
            - ActionImport
            - FunctionImport
            - Singleton
        container:
          allOf:
            - $ref: '#/components/schemas/IEdmEntityContainer'
          nullable: true
          readOnly: true
      additionalProperties: false
    IEdmExpression:
      type: object
      properties:
        expressionKind:
          allOf:
            - $ref: '#/components/schemas/EdmExpressionKind'
          readOnly: true
          x-enumNames:
            - None
            - BinaryConstant
            - BooleanConstant
            - DateTimeOffsetConstant
            - DecimalConstant
            - FloatingConstant
            - GuidConstant
            - IntegerConstant
            - StringConstant
            - DurationConstant
            - 'Null'
            - Record
            - Collection
            - Path
            - If
            - Cast
            - IsOf
            - FunctionApplication
            - LabeledExpressionReference
            - Labeled
            - PropertyPath
            - NavigationPropertyPath
            - DateConstant
            - TimeOfDayConstant
            - EnumMember
            - AnnotationPath
      additionalProperties: false
    IEdmModel:
      type: object
      properties:
        schemaElements:
          type: array
          items:
            $ref: '#/components/schemas/IEdmSchemaElement'
          nullable: true
          readOnly: true
        vocabularyAnnotations:
          type: array
          items:
            $ref: '#/components/schemas/IEdmVocabularyAnnotation'
          nullable: true
          readOnly: true
        referencedModels:
          type: array
          items:
            $ref: '#/components/schemas/IEdmModel'
          nullable: true
          readOnly: true
        declaredNamespaces:
          type: array
          items:
            type: string
          nullable: true
          readOnly: true
        directValueAnnotationsManager:
          allOf:
            - $ref: '#/components/schemas/IEdmDirectValueAnnotationsManager'
          nullable: true
          readOnly: true
        entityContainer:
          allOf:
            - $ref: '#/components/schemas/IEdmEntityContainer'
          nullable: true
          readOnly: true
      additionalProperties: false
    IEdmSchemaElement:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        schemaElementKind:
          allOf:
            - $ref: '#/components/schemas/EdmSchemaElementKind'
          readOnly: true
          x-enumNames:
            - None
            - TypeDefinition
            - Term
            - Action
            - EntityContainer
            - Function
        namespace:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    IEdmTerm:
      type: object
      properties:
        name:
          type: string
          nullable: true
          readOnly: true
        schemaElementKind:
          allOf:
            - $ref: '#/components/schemas/EdmSchemaElementKind'
          readOnly: true
          x-enumNames:
            - None
            - TypeDefinition
            - Term
            - Action
            - EntityContainer
            - Function
        namespace:
          type: string
          nullable: true
          readOnly: true
        type:
          allOf:
            - $ref: '#/components/schemas/IEdmTypeReference'
          nullable: true
          readOnly: true
        appliesTo:
          type: string
          nullable: true
          readOnly: true
        defaultValue:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    IEdmType:
      type: object
      properties:
        typeKind:
          allOf:
            - $ref: '#/components/schemas/EdmTypeKind'
          readOnly: true
          x-enumNames:
            - None
            - Primitive
            - Entity
            - Complex
            - Collection
            - EntityReference
            - Enum
            - TypeDefinition
            - Untyped
            - Path
      additionalProperties: false
    IEdmTypeReference:
      type: object
      properties:
        isNullable:
          type: boolean
          readOnly: true
        definition:
          allOf:
            - $ref: '#/components/schemas/IEdmType'
          nullable: true
          readOnly: true
      additionalProperties: false
    IEdmVocabularyAnnotatable:
      type: object
      additionalProperties: false
    IEdmVocabularyAnnotation:
      type: object
      properties:
        qualifier:
          type: string
          nullable: true
          readOnly: true
        term:
          allOf:
            - $ref: '#/components/schemas/IEdmTerm'
          nullable: true
          readOnly: true
        target:
          allOf:
            - $ref: '#/components/schemas/IEdmVocabularyAnnotatable'
          nullable: true
          readOnly: true
        value:
          allOf:
            - $ref: '#/components/schemas/IEdmExpression'
          nullable: true
          readOnly: true
        usesDefault:
          type: boolean
          readOnly: true
      additionalProperties: false
    Library:
      required:
        - name
        - id
        - isDeleted
        - lastUpdatedDateTime
      type: object
      properties:
        name:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/Book'
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_Library'
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_Library'
      additionalProperties: false
    LibraryInsert:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookInsert'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_LibraryInsert'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_LibraryInsert'
          nullable: true
      additionalProperties: false
      description: Library without database generated properties
    LibraryPageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Library'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    LibraryUpdate:
      required:
        - id
      type: object
      properties:
        name:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookUpdate'
          nullable: true
        id:
          type: string
          format: uuid
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_LibraryUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_LibraryUpdate'
          nullable: true
      additionalProperties: false
      description: Library with all properties optional except PKs
    LibraryUpdateWithoutPKs:
      type: object
      properties:
        name:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/BookUpdate'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_LibraryUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_LibraryUpdate'
          nullable: true
      additionalProperties: false
      description:
        Library without PKs and database generated properties and with all
        properties optional
    Note:
      required:
        - comment
        - pages
        - id
        - isDeleted
        - lastUpdatedDateTime
        - bookId
      type: object
      properties:
        comment:
          type: string
        pages:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/Book'
          nullable: true
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_Note'
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_Note'
        bookId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    NoteInsert:
      required:
        - comment
        - pages
      type: object
      properties:
        comment:
          type: string
        pages:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/BookInsert'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_NoteInsert'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_NoteInsert'
          nullable: true
        bookId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: Note without database generated properties
    NotePageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    NoteUpdate:
      required:
        - id
      type: object
      properties:
        comment:
          type: string
        pages:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
          nullable: true
        id:
          type: string
          format: uuid
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_NoteUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_NoteUpdate'
          nullable: true
        bookId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: Note with all properties optional except PKs
    NoteUpdateWithoutPKs:
      type: object
      properties:
        comment:
          type: string
        pages:
          type: integer
          format: int32
        book:
          allOf:
            - $ref: '#/components/schemas/BookUpdateWithoutPKs'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_NoteUpdate'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_NoteUpdate'
          nullable: true
        bookId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description:
        Note without PKs and database generated properties and with all
        properties optional
    ODataEntitySetInfo:
      type: object
      properties:
        typeAnnotation:
          allOf:
            - $ref: '#/components/schemas/ODataTypeAnnotation'
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    ODataFunctionImportInfo:
      type: object
      properties:
        typeAnnotation:
          allOf:
            - $ref: '#/components/schemas/ODataTypeAnnotation'
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    ODataServiceDocument:
      type: object
      properties:
        typeAnnotation:
          allOf:
            - $ref: '#/components/schemas/ODataTypeAnnotation'
          nullable: true
        entitySets:
          type: array
          items:
            $ref: '#/components/schemas/ODataEntitySetInfo'
          nullable: true
        singletons:
          type: array
          items:
            $ref: '#/components/schemas/ODataSingletonInfo'
          nullable: true
        functionImports:
          type: array
          items:
            $ref: '#/components/schemas/ODataFunctionImportInfo'
          nullable: true
      additionalProperties: false
    ODataSingletonInfo:
      type: object
      properties:
        typeAnnotation:
          allOf:
            - $ref: '#/components/schemas/ODataTypeAnnotation'
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        name:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
      additionalProperties: false
    ODataTypeAnnotation:
      type: object
      properties:
        typeName:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    OrganisationNameStructure:
      required:
        - id
        - isDeleted
        - lastUpdatedDateTime
        - name
        - description
      type: object
      properties:
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        name:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationNameStructureInsert:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
      description: OrganisationNameStructure without database generated properties
    OrganisationNameStructureUpdate:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
      description: OrganisationNameStructure with all properties optional except PKs
    OrganisationNameStructureUpdateWithoutPKs:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
      description: OrganisationNameStructure without PKs and database generated
        properties and with all properties optional
    PermissionTypesOnDataEnum:
      enum:
        - 1
        - 2
        - 4
        - 8
        - 14
      type: integer
      format: int32
      x-enumNames:
        - None
        - Read
        - Update
        - Delete
        - All
    Rectangle:
      allOf:
        - $ref: '#/components/schemas/Shape'
        - required:
            - height
            - width
          type: object
          properties:
            width:
              type: number
              format: double
            height:
              type: number
              format: double
          additionalProperties: false
    RectangleInsert:
      type: object
      additionalProperties: false
      description: Rectangle without database generated properties
    RectanglePageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/Rectangle'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    RectangleUpdate:
      required:
        - id
      type: object
      additionalProperties: false
      description: Rectangle with all properties optional except PKs
    RectangleUpdateWithoutPKs:
      type: object
      additionalProperties: false
      description:
        Rectangle without PKs and database generated properties and with
        all properties optional
    SampleEntity1:
      required:
        - title
        - firstName
        - lastName
        - amount
        - samplefieldString
        - samplefieldint
        - samplefieldbool
        - id
        - isDeleted
        - lastUpdatedDateTime
        - sampleNoteconnectionId
        - applicationUserxId
      type: object
      properties:
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        samplefieldString:
          type: string
        samplefieldint:
          type: integer
          format: int32
        samplefieldbool:
          type: boolean
        sampleNoteconnection:
          allOf:
            - $ref: '#/components/schemas/Note'
          nullable: true
        applicationUserx:
          allOf:
            - $ref: '#/components/schemas/ApplicationUser'
          nullable: true
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity1'
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity1'
        sampleNoteconnectionId:
          type: string
          format: uuid
          nullable: true
        applicationUserxId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    SampleEntity1Insert:
      required:
        - samplefieldString
      type: object
      properties:
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        samplefieldString:
          type: string
        samplefieldint:
          type: integer
          format: int32
        samplefieldbool:
          type: boolean
        sampleNoteconnection:
          allOf:
            - $ref: '#/components/schemas/NoteInsert'
          nullable: true
        applicationUserx:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserInsert'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity1Insert'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref:
              "#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity1In\
              sert"
          nullable: true
        sampleNoteconnectionId:
          type: string
          format: uuid
          nullable: true
        applicationUserxId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: SampleEntity1 without database generated properties
    SampleEntity1PageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/SampleEntity1'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    SampleEntity1Update:
      required:
        - id
      type: object
      properties:
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        samplefieldString:
          type: string
        samplefieldint:
          type: integer
          format: int32
        samplefieldbool:
          type: boolean
        sampleNoteconnection:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
          nullable: true
        applicationUserx:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        id:
          type: string
          format: uuid
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity1Update'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref:
              "#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity1Up\
              date"
          nullable: true
        sampleNoteconnectionId:
          type: string
          format: uuid
          nullable: true
        applicationUserxId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: SampleEntity1 with all properties optional except PKs
    SampleEntity1UpdateWithoutPKs:
      type: object
      properties:
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        samplefieldString:
          type: string
        samplefieldint:
          type: integer
          format: int32
        samplefieldbool:
          type: boolean
        sampleNoteconnection:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
          nullable: true
        applicationUserx:
          allOf:
            - $ref: '#/components/schemas/ApplicationUserUpdateWithoutPKs'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity1Update'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref:
              "#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity1Up\
              date"
          nullable: true
        sampleNoteconnectionId:
          type: string
          format: uuid
          nullable: true
        applicationUserxId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description:
        SampleEntity1 without PKs and database generated properties and
        with all properties optional
    SampleEntity2:
      required:
        - samplefield2String
        - samplefield2int
        - samplefield2bool
        - id
        - isDeleted
        - lastUpdatedDateTime
        - sampleNote2connectionId
      type: object
      properties:
        samplefield2String:
          type: string
          nullable: true
        samplefield2int:
          type: integer
          format: int32
        samplefield2bool:
          type: boolean
        sampleNote2connection:
          allOf:
            - $ref: '#/components/schemas/Note'
          nullable: true
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity2'
        ownersApplicationUserGroups:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity2'
        sampleNote2connectionId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    SampleEntity2Insert:
      type: object
      properties:
        samplefield2String:
          type: string
          nullable: true
        samplefield2int:
          type: integer
          format: int32
        samplefield2bool:
          type: boolean
        sampleNote2connection:
          allOf:
            - $ref: '#/components/schemas/NoteInsert'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity2Insert'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref:
              "#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity2In\
              sert"
          nullable: true
        sampleNote2connectionId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: SampleEntity2 without database generated properties
    SampleEntity2PageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/SampleEntity2'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    SampleEntity2Update:
      required:
        - id
      type: object
      properties:
        samplefield2String:
          type: string
          nullable: true
        samplefield2int:
          type: integer
          format: int32
        samplefield2bool:
          type: boolean
        sampleNote2connection:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
          nullable: true
        id:
          type: string
          format: uuid
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity2Update'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref:
              "#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity2Up\
              date"
          nullable: true
        sampleNote2connectionId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description: SampleEntity2 with all properties optional except PKs
    SampleEntity2UpdateWithoutPKs:
      type: object
      properties:
        samplefield2String:
          type: string
          nullable: true
        samplefield2int:
          type: integer
          format: int32
        samplefield2bool:
          type: boolean
        sampleNote2connection:
          allOf:
            - $ref: '#/components/schemas/NoteUpdateWithoutPKs'
          nullable: true
        ownersApplicationUsers:
          type: array
          items:
            $ref: '#/components/schemas/DataMultiOwner_ApplicationUser_SampleEntity2Update'
          nullable: true
        ownersApplicationUserGroups:
          type: array
          items:
            $ref:
              "#/components/schemas/DataMultiOwner_ApplicationUserGroup_SampleEntity2Up\
              date"
          nullable: true
        sampleNote2connectionId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      description:
        SampleEntity2 without PKs and database generated properties and
        with all properties optional
    Shape:
      required:
        - type
        - colour
        - description
        - id
        - isDeleted
        - lastUpdatedDateTime
      type: object
      properties:
        type:
          enum:
            - Circle
            - Rectangle
          type: string
          description: 'Discriminator property. Possible values: Circle, Rectangle'
        colour:
          type: string
        description:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        isDeleted:
          type: boolean
        lastUpdatedDateTime:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      discriminator:
        propertyName: type
        mapping:
          Circle: '#/components/schemas/Circle'
          Rectangle: '#/components/schemas/Rectangle'
    ShapeInsert:
      required:
        - colour
        - type
      type: object
      properties:
        type:
          enum:
            - Circle
            - Rectangle
          type: string
          description: 'Discriminator property. Possible values: Circle, Rectangle'
        colour:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
      description: Shape without database generated properties
    ShapePageWithTotalCountDTO:
      type: object
      properties:
        list:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Circle'
              - $ref: '#/components/schemas/Rectangle'
          nullable: true
        totalRecCount:
          type: integer
          format: int32
        totalPageCount:
          type: integer
          format: int32
      additionalProperties: false
    ShapeUpdate:
      required:
        - id
      type: object
      properties:
        type:
          enum:
            - Circle
            - Rectangle
          type: string
          description: 'Discriminator property. Possible values: Circle, Rectangle'
        colour:
          type: string
        description:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
      description: Shape with all properties optional except PKs
    ShapeUpdateWithoutPKs:
      type: object
      properties:
        type:
          enum:
            - Circle
            - Rectangle
          type: string
          description: 'Discriminator property. Possible values: Circle, Rectangle'
        colour:
          type: string
        description:
          type: string
          nullable: true
      additionalProperties: false
      description:
        Shape without PKs and database generated properties and with all
        properties optional
    StringBaseDataMultiOwnerListTuple:
      required:
        - item1
        - item2
      type: object
      properties:
        item1:
          type: string
          nullable: true
        item2:
          type: array
          items:
            $ref: '#/components/schemas/BaseDataMultiOwner'
          nullable: true
      additionalProperties: false
    StringInt32DictionaryStringTuple:
      required:
        - item1
        - item2
      type: object
      properties:
        item1:
          type: object
          additionalProperties:
            type: integer
            format: int32
          nullable: true
        item2:
          type: string
          nullable: true
      additionalProperties: false
    StringStringListTuple:
      required:
        - item1
        - item2
      type: object
      properties:
        item1:
          type: string
          nullable: true
        item2:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserPermissionTypeDTO:
      required:
        - id
        - permissions
      type: object
      properties:
        id:
          type: string
          format: uuid
        permissions:
          allOf:
            - $ref: '#/components/schemas/PermissionTypesOnDataEnum'
          x-enumNames:
            - None
            - Read
            - Update
            - Delete
            - All
      additionalProperties: false
    UserSessionDataDTO:
      type: object
      properties:
        claims:
          type: array
          items:
            $ref: '#/components/schemas/AppClaimsEnum'
        userId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
