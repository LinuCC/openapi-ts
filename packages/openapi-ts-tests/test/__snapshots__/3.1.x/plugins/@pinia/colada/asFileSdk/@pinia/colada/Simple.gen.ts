// This file is auto-generated by @hey-api/openapi-ts

import { useQuery, type UseQueryOptions } from '@pinia/colada';
import { toRef } from 'vue';
import type { ApiVVersionODataControllerCountResponse, ApiVVersionODataControllerCountData, DeleteCallWithoutParametersAndResponseData, GetCallWithoutParametersAndResponseData, HeadCallWithoutParametersAndResponseData, OptionsCallWithoutParametersAndResponseData, PatchCallWithoutParametersAndResponseData, PostCallWithoutParametersAndResponseData, PutCallWithoutParametersAndResponseData } from '../../types.gen';
import { client } from '@pinia/colada/client';

export const useApiVVersionODataControllerCountQuery = async (params: {}, options?: UseQueryOptions<ApiVVersionODataControllerCountResponse, unknown, ApiVVersionODataControllerCountData>) => {
    const query = useQuery({
        query: client({
            method: 'get',
            url: '/api/v{api-version}/simple/$count'
        }),
        key: [
            'Simple',
            'apiVVersionODataControllerCount'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const useDeleteCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, DeleteCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'delete',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'deleteCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const useGetCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, GetCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'get',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'getCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const useHeadCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, HeadCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'head',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'headCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const useOptionsCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, OptionsCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'options',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'optionsCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const usePatchCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, PatchCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'patch',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'patchCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const usePostCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, PostCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'post',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'postCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const usePutCallWithoutParametersAndResponseQuery = async (params: {}, options?: UseQueryOptions<unknown, unknown, PutCallWithoutParametersAndResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'put',
            url: '/api/v{api-version}/simple'
        }),
        key: [
            'Simple',
            'putCallWithoutParametersAndResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};