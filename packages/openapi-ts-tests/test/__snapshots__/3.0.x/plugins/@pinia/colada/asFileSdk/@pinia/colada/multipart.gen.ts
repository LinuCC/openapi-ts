// This file is auto-generated by @hey-api/openapi-ts

import { useQuery, type UseQueryOptions, useMutation, type UseMutationOptions } from '@pinia/colada';
import { toRef } from 'vue';
import type { MultipartResponseResponse, MultipartResponseData, MultipartRequestData } from '../../types.gen';
import { client } from '@pinia/colada/client';

export const useMultipartResponseQuery = async (params: {}, options?: UseQueryOptions<MultipartResponseResponse, unknown, MultipartResponseData>) => {
    const query = useQuery({
        query: client({
            method: 'get',
            url: '/api/v{api-version}/multipart'
        }),
        key: [
            'multipart',
            'multipartResponse'
        ],
        ...options
    });
    return {
        ...query
    };
};

export const useMultipartRequestMutation = async (params: {}, options?: UseMutationOptions<unknown, MultipartRequestData, unknown>) => {
    const bodyRef = toRef(params?.body);
    const mutation = useMutation({
        mutation: client({
            method: 'post',
            url: '/api/v{api-version}/multipart',
            bodyRef
        }),
        key: [
            'multipart',
            'multipartRequest',
            bodyRef
        ],
        ...options
    });
    return {
        ...mutation,
        body: bodyRef
    };
};