// This file is auto-generated by @hey-api/openapi-ts

import { useQuery, type UseQueryOptions, useMutation, type UseMutationOptions } from '@pinia/colada';
import { toRef } from 'vue';
import type { ComplexTypesResponse, ComplexTypesData, ComplexParamsResponse, ComplexParamsData } from '../../types.gen';
import { client } from '@pinia/colada/client';

export const useComplexTypesQuery = async (params: {}, options?: UseQueryOptions<ComplexTypesResponse, unknown, ComplexTypesData>) => {
    const queryRef = toRef(params?.query);
    const query = useQuery({
        query: client({
            method: 'get',
            url: '/api/v{api-version}/complex',
            queryRef
        }),
        key: [
            'Complex',
            'complexTypes',
            queryRef
        ],
        ...options
    });
    return {
        ...query,
        query: queryRef
    };
};

export const useComplexParamsMutation = async (params: {}, options?: UseMutationOptions<ComplexParamsResponse, ComplexParamsData, unknown>) => {
    const pathRef = toRef(params?.path);
    const bodyRef = toRef(params?.body);
    const mutation = useMutation({
        mutation: client({
            method: 'put',
            url: '/api/v{api-version}/complex/{id}',
            pathRef,
            bodyRef
        }),
        key: [
            'Complex',
            'complexParams',
            pathRef,
            bodyRef
        ],
        ...options
    });
    return {
        ...mutation,
        path: pathRef,
        body: bodyRef
    };
};