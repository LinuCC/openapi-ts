// This file is auto-generated by @hey-api/openapi-ts

// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { client as _heyApiClient } from '../../client.gen'
import {
  createUser,
  createUsersWithListInput,
  deleteUser,
  getUserByName,
  loginUser,
  logoutUser,
  type Options,
  updateUser
} from '../../sdk.gen'
import type {
  CreateUserData,
  CreateUsersWithListInputData,
  DeleteUserData,
  GetUserByNameData,
  LoginUserData,
  LogoutUserData,
  UpdateUserData
} from '../../types.gen'

/**
 * Create user.
 * This can only be done by the logged in user.
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export const createUserMutation = (options?: Options<CreateUserData>) => ({
  mutation: async (options: Options<CreateUserData>) => {
    const { data } = await createUser(options)
    return data
  }
})

/**
 * Creates list of users with given input array.
 * Creates list of users with given input array.
 */
export const createUsersWithListInputMutation = (
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  options?: Options<CreateUsersWithListInputData>
) => ({
  mutation: async (options: Options<CreateUsersWithListInputData>) => {
    const { data } = await createUsersWithListInput(options)
    return data
  }
})

/**
 * Logs user into the system.
 * Log into the system.
 */
export const loginUserQuery = (options?: Options<LoginUserData>) => ({
  key: ['loginUser', options?.path],
  query: async (context: { signal: AbortSignal }) => {
    const { data } = await loginUser({
      ...options,
      signal: context.signal,
      throwOnError: true
    })
    return data
  }
})

/**
 * Logs out current logged in user session.
 * Log user out of the system.
 */
export const logoutUserQuery = (options?: Options<LogoutUserData>) => ({
  key: ['logoutUser', options?.path],
  query: async (context: { signal: AbortSignal }) => {
    const { data } = await logoutUser({
      ...options,
      signal: context.signal,
      throwOnError: true
    })
    return data
  }
})

/**
 * Delete user resource.
 * This can only be done by the logged in user.
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export const deleteUserMutation = (options?: Options<DeleteUserData>) => ({
  mutation: async (options: Options<DeleteUserData>) => {
    const { data } = await deleteUser(options)
    return data
  }
})

/**
 * Get user by user name.
 * Get user detail based on username.
 */
export const getUserByNameQuery = (options: Options<GetUserByNameData>) => ({
  key: ['getUserByName', options?.path],
  query: async (context: { signal: AbortSignal }) => {
    const { data } = await getUserByName({
      ...options,
      signal: context.signal,
      throwOnError: true
    })
    return data
  }
})

/**
 * Update user resource.
 * This can only be done by the logged in user.
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
export const updateUserMutation = (options?: Options<UpdateUserData>) => ({
  mutation: async (options: Options<UpdateUserData>) => {
    const { data } = await updateUser(options)
    return data
  }
})
